import telebot
import sqlite3
from dotenv import load_dotenv
import os
from telebot import types
from heapq import nsmallest

load_dotenv()

bot = telebot.TeleBot(os.getenv('BOT_API_KEY'))

user_state = {}

@bot.message_handler(commands=['start'])
def welcome(message):

    user_state[message.chat.id] = 'not_pressed'

    #–≤–µ—Ç–∫–∞ "start"

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    eat = types.KeyboardButton("–ì–¥–µ –ø–æ–µ—Å—Ç—å? üçú")
    time = types.KeyboardButton("–ö–∞–∫ –ø—Ä–æ–≤–µ—Å—Ç–∏ –≤—Ä–µ–º—è? üëÄ")
    pay = types.KeyboardButton("–ü–ª–∞—Ç–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è üí∏")

    markup.add(eat, time, pay)

    bot.send_message(message.chat.id,
                     "–ü—Ä–∏–≤–µ—Ç, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, –±–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –≥–æ—Ä–æ–¥—É.".format(
                         message.from_user, bot.get_me()),
                     parse_mode='html', reply_markup=markup)

    sti = open('photo_bot/sticker.jpg', 'rb')
    bot.send_sticker(message.chat.id, sti)

    bot.send_message(message.chat.id, "–ß—Ç–æ –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?", reply_markup=markup)

@bot.message_handler(commands=['asianfood'])
def asianfood(message, id=1, previous_message=None):

    connect = sqlite3.connect("dada_db.db")
    cursor = connect.cursor()

    pages_count_query_asianfood = cursor.execute(f"SELECT COUNT(*) FROM `asianfood`")
    pages_count_asianfood = int(pages_count_query_asianfood.fetchone()[0])
    buttons = types.InlineKeyboardMarkup()

    left = id - 1 if id != 1 else pages_count_asianfood
    right = id + 1 if id != pages_count_asianfood else 1

    product_query = cursor.execute(
        f"SELECT `name`, `street`, `id_rate`, `description`, `img`, `link`, `id_average_cost`, `numphone` FROM `asianfood` WHERE `id` = '{id}';")
    name, street, id_rate, description, img, link, id_average_cost, numphone = product_query.fetchone()

    left_button = types.InlineKeyboardButton("‚Üê", callback_data=f'to asianfood | {left}')
    page_button = types.InlineKeyboardButton(f"{str(id)}/{str(pages_count_asianfood)}", callback_data='_')
    right_button = types.InlineKeyboardButton("‚Üí", callback_data=f'to asianfood | {right}')
    link_button = types.InlineKeyboardButton("–°–∞–π—Ç", url=link, callback_data='buy')
    street_button = types.InlineKeyboardButton("–Ø.–ö–∞—Ä—Ç—ã", url=street, callback_data='buy')
    buttons.add(left_button, page_button, right_button)
    buttons.add(link_button, street_button)

    cursor.execute(f"UPDATE `users` SET `id` = {id} WHERE `users`.`id` = {message.chat.id};")
    connect.commit()

    try:
        try:
            photo = open(img, 'rb')
        except:
            photo = img
        msg = f"*{name}*\n\n"
        msg += f"üíµ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: {id_average_cost}‚ÇΩ\n"
        msg += f"‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: {id_rate}\n"
        msg += f"‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:\n{numphone}\n\n"
        msg += f"{description}" if description != None else '_–Ω–µ—Ç_'

        bot.send_photo(message.chat.id, photo=photo, caption=msg, reply_markup=buttons, parse_mode='Markdown')
    except:
        msg = f"*{name}*\n\n"
        msg += f"üíµ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: {id_average_cost}‚ÇΩ\n"
        msg += f"‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: {id_rate}\n"
        msg += f"‚òéÔ∏è –ù–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤:\n{numphone}\n\n"
        msg += f"{description}" if description != None else '_–Ω–µ—Ç_'

        bot.send_message(message.chat.id, msg, reply_markup=buttons, parse_mode='Markdown')
    try:
        bot.delete_message(message.chat.id, previous_message.id)
    except:
        pass

@bot.message_handler(commands=['fastfood'])
def fastfood(message, id=1, previous_message=None):

    connect = sqlite3.connect("dada_db.db")
    cursor = connect.cursor()

    pages_count_query = cursor.execute(f"SELECT COUNT(*) FROM `fastfood`")
    pages_count_fastfood = int(pages_count_query.fetchone()[0])
    buttons = types.InlineKeyboardMarkup()

    left_fastfood = id - 1 if id != 1 else pages_count_fastfood
    right_fastfood = id + 1 if id != pages_count_fastfood else 1

    product_query = cursor.execute(
        f"SELECT `name`, `street`, `id_rate`, `description`, `img`, `link`, `id_average_cost` FROM `fastfood` WHERE `id` = '{id}';")
    name, street, id_rate, description, img, link, id_average_cost = product_query.fetchone()

    left_button = types.InlineKeyboardButton("‚Üê", callback_data=f'to fastfood | {left_fastfood}')
    page_button = types.InlineKeyboardButton(f"{str(id)}/{str(pages_count_fastfood)}", callback_data='_')
    right_button = types.InlineKeyboardButton("‚Üí", callback_data=f'to fastfood |  {right_fastfood}')
    link_button = types.InlineKeyboardButton("–°–∞–π—Ç", url=link, callback_data='buy')
    street_button = types.InlineKeyboardButton("–Ø.–ö–∞—Ä—Ç—ã", url=street, callback_data='buy')
    buttons.add(left_button, page_button, right_button)
    buttons.add(link_button, street_button)

    cursor.execute(f"UPDATE `users` SET `id` = {id} WHERE `users`.`id` = {message.chat.id};")
    connect.commit()

    try:
        try:
            photo = open(img, 'rb')
        except:
            photo = img
        msg = f"*{name}*\n\n"
        msg += f"‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: {id_rate}\n"
        msg += f"üíµ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: {id_average_cost}‚ÇΩ\n\n"
        msg += f"{description}\n" if description != None else '_–Ω–µ—Ç_\n'

        bot.send_photo(message.chat.id, photo=photo, caption=msg, reply_markup=buttons, parse_mode='Markdown')
    except:
        msg = f"*{name}*\n\n"
        msg += f"‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: {id_rate}\n"
        msg += f"üíµ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: {id_average_cost}‚ÇΩ\n\n"
        msg += f"{description}\n" if description != None else '_–Ω–µ—Ç_\n'

        bot.send_message(message.chat.id, msg, reply_markup=buttons, parse_mode='Markdown')

    try:
        bot.delete_message(message.chat.id, previous_message.id)
    except:
        pass

@bot.message_handler(commands=['canteen'])
def canteen(message, id=1, previous_message=None):

    connect = sqlite3.connect("dada_db.db")
    cursor = connect.cursor()

    pages_count_query = cursor.execute(f"SELECT COUNT(*) FROM `canteen`")
    pages_count_canteen = int(pages_count_query.fetchone()[0])
    buttons = types.InlineKeyboardMarkup()

    left_canteen = id - 1 if id != 1 else pages_count_canteen
    right_canteen = id + 1 if id != pages_count_canteen else 1

    product_query = cursor.execute(
        f"SELECT `name`, `id_rate`, `id_average_cost`, `description`, `street`, `numphone`, `link`, `img` FROM `canteen` WHERE `id` = '{id}';")
    name, id_rate, id_average_cost, description, street, numphone, link, img = product_query.fetchone()

    left_button = types.InlineKeyboardButton("‚Üê", callback_data=f'to canteen | {left_canteen}')
    page_button = types.InlineKeyboardButton(f"{str(id)}/{str(pages_count_canteen)}", callback_data='_')
    right_button = types.InlineKeyboardButton("‚Üí", callback_data=f'to canteen | {right_canteen}')
    link_button = types.InlineKeyboardButton("–°–∞–π—Ç", url=link, callback_data='buy')
    street_button = types.InlineKeyboardButton("–Ø.–ö–∞—Ä—Ç—ã", url=street, callback_data='buy')
    buttons.add(left_button, page_button, right_button)
    buttons.add(link_button, street_button)

    cursor.execute(f"UPDATE `users` SET `id` = {id} WHERE `users`.`id` = {message.chat.id};")
    connect.commit()

    try:
        try:
            photo = open(img, 'rb')
        except:
            photo = img
        msg = f"*{name}*\n\n"
        msg += f"‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: {id_rate}\n"
        msg += f"üíµ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: {id_average_cost}‚ÇΩ\n"
        msg += f"‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {numphone}\n\n"
        msg += f"{description}\n" if description != None else '_–Ω–µ—Ç_\n'

        bot.send_photo(message.chat.id, photo=photo, caption=msg, reply_markup=buttons, parse_mode='Markdown')
    except:
        msg = f"*{name}*\n\n"
        msg += f"‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: {id_rate}\n"
        msg += f"üíµ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: {id_average_cost}‚ÇΩ\n"
        msg += f"‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {numphone}\n\n"
        msg += f"{description}\n" if description != None else '_–Ω–µ—Ç_\n'

        bot.send_message(message.chat.id, msg, reply_markup=buttons, parse_mode='Markdown')

    try:
        bot.delete_message(message.chat.id, previous_message.id)
    except:
        pass

@bot.message_handler(commands=['slavicfood'])
def slavicfood(message, id=1, previous_message=None):

    connect = sqlite3.connect("dada_db.db")
    cursor = connect.cursor()

    pages_count_query = cursor.execute(f"SELECT COUNT(*) FROM `slavicfood`")
    pages_count_slavicfood = int(pages_count_query.fetchone()[0])
    buttons = types.InlineKeyboardMarkup()

    left_slavicfood = id - 1 if id != 1 else pages_count_slavicfood
    right_slavicfood = id + 1 if id != pages_count_slavicfood else 1

    product_query = cursor.execute(
        f"SELECT `name`, `street`, `id_rate`, `description`, `img`, `link`, `id_average_cost`, `numphone` FROM `slavicfood` WHERE `id` = '{id}';")
    name, street, id_rate, description, img, link, id_average_cost, numphone = product_query.fetchone()

    left_button = types.InlineKeyboardButton("‚Üê", callback_data=f'to slavicfood | {left_slavicfood}')
    page_button = types.InlineKeyboardButton(f"{str(id)}/{str(pages_count_slavicfood)}", callback_data='_')
    right_button = types.InlineKeyboardButton("‚Üí", callback_data=f'to slavicfood | {right_slavicfood}')
    link_button = types.InlineKeyboardButton("–°–∞–π—Ç", url=link, callback_data='buy')
    street_button = types.InlineKeyboardButton("–Ø.–ö–∞—Ä—Ç—ã", url=street, callback_data='buy')
    buttons.add(left_button, page_button, right_button)
    buttons.add(link_button, street_button)

    cursor.execute(f"UPDATE `users` SET `id` = {id} WHERE `users`.`id` = {message.chat.id};")
    connect.commit()

    try:
        try:
            photo = open(img, 'rb')
        except:
            photo = img
        msg = f"*{name}*\n\n"
        msg += f"üíµ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: {id_average_cost}‚ÇΩ\n"
        msg += f"‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: {id_rate}\n"
        msg += f"‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {numphone}\n"
        msg += f"{description}" if description != None else '_–Ω–µ—Ç_'

        bot.send_photo(message.chat.id, photo=photo, caption=msg, reply_markup=buttons, parse_mode='Markdown')
    except:
        msg = f"*{name}*\n\n"
        msg += f"üíµ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: {id_average_cost}‚ÇΩ\n"
        msg += f"‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: {id_rate}\n"
        msg += f"‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {numphone}\n"
        msg += f"{description}" if description != None else '_–Ω–µ—Ç_'

        bot.send_message(message.chat.id, msg, reply_markup=buttons, parse_mode='Markdown')

    try:
        bot.delete_message(message.chat.id, previous_message.id)
    except:
        pass

@bot.message_handler(commands=['seafood'])
def seafood(message, id=1, previous_message=None):

    connect = sqlite3.connect("dada_db.db")
    cursor = connect.cursor()

    pages_count_query = cursor.execute(f"SELECT COUNT(*) FROM `seafood`")
    pages_count_seafood = int(pages_count_query.fetchone()[0])
    buttons = types.InlineKeyboardMarkup()

    left_seafood = id - 1 if id != 1 else pages_count_seafood
    right_seafood = id + 1 if id != pages_count_seafood else 1

    product_query = cursor.execute(
        f"SELECT `name`, `street`, `id_rate`, `description`, `img`, `link`, `id_average_cost`, `numphone` FROM `seafood` WHERE `id` = '{id}';")
    name, street, id_rate, description, img, link, id_average_cost, numphone = product_query.fetchone()

    left_button = types.InlineKeyboardButton("‚Üê", callback_data=f'to seafood | {left_seafood}')
    page_button = types.InlineKeyboardButton(f"{str(id)}/{str(pages_count_seafood)}", callback_data='_')
    right_button = types.InlineKeyboardButton("‚Üí", callback_data=f'to seafood | {right_seafood}')
    link_button = types.InlineKeyboardButton("–°–∞–π—Ç", url=link, callback_data='buy')
    street_button = types.InlineKeyboardButton("–Ø.–ö–∞—Ä—Ç—ã", url=street, callback_data='buy')
    buttons.add(left_button, page_button, right_button)
    buttons.add(link_button, street_button)

    cursor.execute(f"UPDATE `users` SET `id` = {id} WHERE `users`.`id` = {message.chat.id};")
    connect.commit()

    try:
        try:
            photo = open(img, 'rb')
        except:
            photo = img
        msg = f"*{name}*\n\n"
        msg += f"üíµ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: {id_average_cost}‚ÇΩ\n"
        msg += f"‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: {id_rate}\n"
        msg += f"‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {numphone}\n\n"
        msg += f"{description}" if description != None else '_–Ω–µ—Ç_\n'

        bot.send_photo(message.chat.id, photo=photo, caption=msg, reply_markup=buttons, parse_mode='Markdown')
    except:
        msg = f"*{name}*\n\n"
        msg += f"üíµ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: {id_average_cost}‚ÇΩ\n"
        msg += f"‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: {id_rate}\n"
        msg += f"‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {numphone}\n\n"
        msg += f"{description}" if description != None else '_–Ω–µ—Ç_\n'

        bot.send_message(message.chat.id, msg, reply_markup=buttons, parse_mode='Markdown')

    try:
        bot.delete_message(message.chat.id, previous_message.id)
    except:
        pass

@bot.message_handler(commands=['questroom'])
def questroom(message, id=1, previous_message=None):

    connect = sqlite3.connect("dada_db.db")
    cursor = connect.cursor()

    pages_count_query = cursor.execute(f"SELECT COUNT(*) FROM `questroom`")
    pages_count_questroom = int(pages_count_query.fetchone()[0])
    buttons = types.InlineKeyboardMarkup()

    left_questroom = id - 1 if id != 1 else pages_count_questroom
    right_questroom = id + 1 if id != pages_count_questroom else 1

    product_query = cursor.execute(
        f"SELECT `name`, `street`, `id_rate`, `link`, `img`, `numphone`, `id_average_cost`, `description` FROM `questroom` WHERE `id` = '{id}';")
    name, street, id_rate, link, img, numphone, id_average_cost, description = product_query.fetchone()

    left_button = types.InlineKeyboardButton("‚Üê", callback_data=f'to questroom | {left_questroom}')
    page_button = types.InlineKeyboardButton(f"{str(id)}/{str(pages_count_questroom)}", callback_data='_')
    right_button = types.InlineKeyboardButton("‚Üí", callback_data=f'to questroom | {right_questroom}')
    link_button = types.InlineKeyboardButton("–°–∞–π—Ç", url=link, callback_data='buy')
    street_button = types.InlineKeyboardButton("–Ø.–ö–∞—Ä—Ç—ã", url=street, callback_data='buy')
    buttons.add(left_button, page_button, right_button)
    buttons.add(link_button, street_button)

    cursor.execute(f"UPDATE `users` SET `id` = {id} WHERE `users`.`id` = {message.chat.id};")
    connect.commit()

    try:
        try:
            photo = open(img, 'rb')
        except:
            photo = img
        msg = f"*{name}*\n\n"
        msg += f"üíµ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: {id_average_cost}‚ÇΩ\n"
        msg += f"‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: {id_rate}\n"
        msg += f"‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {numphone}\n\n"
        msg += f"{description}" if description != None else '_–Ω–µ—Ç_\n'

        bot.send_photo(message.chat.id, photo=photo, caption=msg, reply_markup=buttons, parse_mode='Markdown')
    except:
        msg = f"*{name}*\n\n"
        msg += f"üíµ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: {id_average_cost}‚ÇΩ\n"
        msg += f"‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: {id_rate}\n"
        msg += f"‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {numphone}\n\n"
        msg += f"{description}" if description != None else '_–Ω–µ—Ç_\n'

        bot.send_message(message.chat.id, msg, reply_markup=buttons, parse_mode='Markdown')

    try:
        bot.delete_message(message.chat.id, previous_message.id)
    except:
        pass

@bot.message_handler(commands=['nightclub'])
def nightclub(message, id=1, previous_message=None):

    connect = sqlite3.connect("dada_db.db")
    cursor = connect.cursor()

    pages_count_query = cursor.execute(f"SELECT COUNT(*) FROM `nightclub`")
    pages_count_nightclub = int(pages_count_query.fetchone()[0])
    buttons = types.InlineKeyboardMarkup()

    left_nightclub = id - 1 if id != 1 else pages_count_nightclub
    right_nightclub = id + 1 if id != pages_count_nightclub else 1

    product_query = cursor.execute(
        f"SELECT `name`, `id_rate`, `description`, `average_cost`, `street`, `worktime`, `numphone`, `link`, `img` FROM `nightclub` WHERE `id` = '{id}';")
    name, id_rate, description, average_cost, street, worktime, numphone, link, img = product_query.fetchone()

    left_button = types.InlineKeyboardButton("‚Üê", callback_data=f'to nightclub | {left_nightclub}')
    page_button = types.InlineKeyboardButton(f"{str(id)}/{str(pages_count_nightclub)}", callback_data='_')
    right_button = types.InlineKeyboardButton("‚Üí", callback_data=f'to nightclub | {right_nightclub}')
    link_button = types.InlineKeyboardButton("–°–∞–π—Ç", url=link, callback_data='buy')
    street_button = types.InlineKeyboardButton("–Ø.–ö–∞—Ä—Ç—ã", url=street, callback_data='buy')
    buttons.add(left_button, page_button, right_button)
    buttons.add(link_button, street_button)

    cursor.execute(f"UPDATE `users` SET `id` = {id} WHERE `users`.`id` = {message.chat.id};")
    connect.commit()

    try:
        try:
            photo = open(img, 'rb')
        except:
            photo = img
        msg = f"*{name}*\n\n"
        msg += f"‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: {id_rate}\n"
        msg += f"üíµ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: {average_cost}‚ÇΩ\n"
        msg += f"‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {numphone}\n"
        msg += f"üïò –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {worktime}\n\n"
        msg += f"{description}" if description != None else '_–Ω–µ—Ç_'

        bot.send_photo(message.chat.id, photo=photo, caption=msg, reply_markup=buttons, parse_mode='Markdown')
    except:
        msg = f"*{name}*\n\n"
        msg += f"‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: {id_rate}\n"
        msg += f"üíµ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: {average_cost}‚ÇΩ\n"
        msg += f"‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {numphone}\n"
        msg += f"üïò –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {worktime}\n\n"
        msg += f"{description}" if description != None else '_–Ω–µ—Ç_'

        bot.send_message(message.chat.id, msg, reply_markup=buttons, parse_mode='Markdown')

    try:
        bot.delete_message(message.chat.id, previous_message.id)
    except:
        pass

@bot.message_handler(commands=['georgianfood'])
def georgianfood(message, id=1, previous_message=None):

    connect = sqlite3.connect("dada_db.db")
    cursor = connect.cursor()

    pages_count_query = cursor.execute(f"SELECT COUNT(*) FROM `georgianfood`")
    pages_count_georgianfood = int(pages_count_query.fetchone()[0])
    buttons = types.InlineKeyboardMarkup()

    left_georgianfood = id - 1 if id != 1 else pages_count_georgianfood
    right_georgianfood = id + 1 if id != pages_count_georgianfood else 1

    product_query = cursor.execute(
        f"SELECT `name`, `street`, `id_rate`, `description`, `img`, `link`, `id_average_cost`, `numphone` FROM `georgianfood` WHERE `id` = '{id}';")
    name, street, id_rate, description, img, link, id_average_cost, numphone = product_query.fetchone()

    left_button = types.InlineKeyboardButton("‚Üê", callback_data=f'to georgianfood | {left_georgianfood}')
    page_button = types.InlineKeyboardButton(f"{str(id)}/{str(pages_count_georgianfood)}", callback_data='_')
    right_button = types.InlineKeyboardButton("‚Üí", callback_data=f'to georgianfood | {right_georgianfood}')
    link_button = types.InlineKeyboardButton("–°–∞–π—Ç", url=link, callback_data='buy')
    street_button = types.InlineKeyboardButton("–Ø.–ö–∞—Ä—Ç—ã", url=street, callback_data='buy')
    buttons.add(left_button, page_button, right_button)
    buttons.add(link_button, street_button)

    cursor.execute(f"UPDATE `users` SET `id` = {id} WHERE `users`.`id` = {message.chat.id};")
    connect.commit()

    try:
        try:
            photo = open(img, 'rb')
        except:
            photo = img
        msg = f"*{name}*\n\n"
        msg += f"üíµ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: {id_average_cost}‚ÇΩ\n"
        msg += f"‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: {id_rate}\n"
        msg += f"‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {numphone}\n\n"
        msg += f"{description}" if description != None else '_–Ω–µ—Ç_'

        bot.send_photo(message.chat.id, photo=photo, caption=msg, reply_markup=buttons, parse_mode='Markdown')
    except:
        msg = f"*{name}*\n\n"
        msg += f"üíµ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: {id_average_cost}‚ÇΩ\n"
        msg += f"‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: {id_rate}\n"
        msg += f"‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {numphone}\n\n"
        msg += f"{description}" if description != None else '_–Ω–µ—Ç_'

        bot.send_message(message.chat.id, msg, reply_markup=buttons, parse_mode='Markdown')

    try:
        bot.delete_message(message.chat.id, previous_message.id)
    except:
        pass

@bot.message_handler(commands=['italianfood'])
def italianfood(message, id=1, previous_message=None):

    connect = sqlite3.connect("dada_db.db")
    cursor = connect.cursor()

    pages_count_query = cursor.execute(f"SELECT COUNT(*) FROM `italianfood`")
    pages_count_italianfood = int(pages_count_query.fetchone()[0])
    buttons = types.InlineKeyboardMarkup()

    left_italianfood = id - 1 if id != 1 else pages_count_italianfood
    right_italianfood = id + 1 if id != pages_count_italianfood else 1

    product_query = cursor.execute(
        f"SELECT `name`, `street`, `id_rate`, `description`, `img`, `link`, `numphone`, `id_average_cost` FROM `italianfood` WHERE `id` = '{id}';")
    name, street, id_rate, description, img, link, numphone, id_average_cost = product_query.fetchone()

    left_button = types.InlineKeyboardButton("‚Üê", callback_data=f'to italianfood | {left_italianfood}')
    page_button = types.InlineKeyboardButton(f"{str(id)}/{str(pages_count_italianfood)}", callback_data='_')
    right_button = types.InlineKeyboardButton("‚Üí", callback_data=f'to italianfood | {right_italianfood}')
    link_button = types.InlineKeyboardButton("–°–∞–π—Ç", url=link, callback_data='buy')
    street_button = types.InlineKeyboardButton("–Ø.–ö–∞—Ä—Ç—ã", url=street, callback_data='buy')
    buttons.add(left_button, page_button, right_button)
    buttons.add(link_button, street_button)

    cursor.execute(f"UPDATE `users` SET `id` = {id} WHERE `users`.`id` = {message.chat.id};")
    connect.commit()

    try:
        try:
            photo = open(img, 'rb')
        except:
            photo = img
        msg = f"*{name}*\n\n"
        msg += f"üíµ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: {id_average_cost}‚ÇΩ\n"
        msg += f"‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: {id_rate}\n"
        msg += f"‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {numphone}\n\n"
        msg += f"{description}" if description != None else '_–Ω–µ—Ç_'

        bot.send_photo(message.chat.id, photo=photo, caption=msg, reply_markup=buttons, parse_mode='Markdown')
    except:
        msg = f"*{name}*\n\n"
        msg += f"üíµ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: {id_average_cost}‚ÇΩ\n"
        msg += f"‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: {id_rate}\n"
        msg += f"‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {numphone}\n\n"
        msg += f"{description}" if description != None else '_–Ω–µ—Ç_'

        bot.send_message(message.chat.id, msg, reply_markup=buttons, parse_mode='Markdown')

    try:
        bot.delete_message(message.chat.id, previous_message.id)
    except:
        pass

@bot.message_handler(commands=['karaoke'])
def karaoke(message, id=1, previous_message=None):

    connect = sqlite3.connect("dada_db.db")
    cursor = connect.cursor()

    pages_count_query = cursor.execute(f"SELECT COUNT(*) FROM `karaoke`")
    pages_count_karaoke = int(pages_count_query.fetchone()[0])
    buttons = types.InlineKeyboardMarkup()

    left_karaoke = id - 1 if id != 1 else pages_count_karaoke
    right_karaoke = id + 1 if id != pages_count_karaoke else 1

    product_query = cursor.execute(
        f"SELECT `name`, `id_rate`, `description`, `id_average_cost`, `worktime`, `street`, `numphone`, `link`, `img` FROM `karaoke` WHERE `id` = '{id}';")
    name, id_rate, description, id_average_cost, worktime, street, numphone, link, img = product_query.fetchone()

    left_button = types.InlineKeyboardButton("‚Üê", callback_data=f'to karaoke | {left_karaoke}')
    page_button = types.InlineKeyboardButton(f"{str(id)}/{str(pages_count_karaoke)}", callback_data='_')
    right_button = types.InlineKeyboardButton("‚Üí", callback_data=f'to karaoke | {right_karaoke}')
    link_button = types.InlineKeyboardButton("–°–∞–π—Ç", url=link, callback_data='buy')
    street_button = types.InlineKeyboardButton("–Ø.–ö–∞—Ä—Ç—ã", url=street, callback_data='buy')
    buttons.add(left_button, page_button, right_button)
    buttons.add(link_button, street_button)

    cursor.execute(f"UPDATE `users` SET `id` = {id} WHERE `users`.`id` = {message.chat.id};")
    connect.commit()

    try:
        try:
            photo = open(img, 'rb')
        except:
            photo = img
        msg = f"*{name}*\n\n"
        msg += f"‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: {id_rate}\n"
        msg += f"üíµ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: {id_average_cost}‚ÇΩ\n"
        msg += f"‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {numphone}\n"
        msg += f"üïò –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {worktime}\n\n"
        msg += f"{description}" if description != None else '_–Ω–µ—Ç_'

        bot.send_photo(message.chat.id, photo=photo, caption=msg, reply_markup=buttons, parse_mode='Markdown')
    except:
        msg = f"*{name}*\n\n"
        msg += f"‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: {id_rate}\n"
        msg += f"üíµ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: {id_average_cost}‚ÇΩ\n"
        msg += f"‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {numphone}\n"
        msg += f"üïò –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {worktime}\n\n"
        msg += f"{description}" if description != None else '_–Ω–µ—Ç_'

        bot.send_message(message.chat.id, msg, reply_markup=buttons, parse_mode='Markdown')

    try:
        bot.delete_message(message.chat.id, previous_message.id)
    except:
        pass

@bot.message_handler(commands=['anticafe'])
def anticafe(message, id=1, previous_message=None):

    connect = sqlite3.connect("dada_db.db")
    cursor = connect.cursor()

    pages_count_query = cursor.execute(f"SELECT COUNT(*) FROM `anticafe_game`")
    pages_count_anticafe = int(pages_count_query.fetchone()[0])
    buttons = types.InlineKeyboardMarkup()

    left_anticafe = id - 1 if id != 1 else pages_count_anticafe
    right_anticafe = id + 1 if id != pages_count_anticafe else 1

    product_query = cursor.execute(
        f"SELECT `name`, `street`, `id_rate`, `description`, `img`, `link`, `numphone`, `id_average_cost` FROM `anticafe_game` WHERE `id` = '{id}';")
    name, street, id_rate, description, img, link, numphone, id_average_cost = product_query.fetchone()

    left_button = types.InlineKeyboardButton("‚Üê", callback_data=f'to anticafe | {left_anticafe}')
    page_button = types.InlineKeyboardButton(f"{str(id)}/{str(pages_count_anticafe)}", callback_data='_')
    right_button = types.InlineKeyboardButton("‚Üí", callback_data=f'to anticafe | {right_anticafe}')
    link_button = types.InlineKeyboardButton("–°–∞–π—Ç", url=link, callback_data='buy')
    street_button = types.InlineKeyboardButton("–Ø.–ö–∞—Ä—Ç—ã", url=street, callback_data='buy')
    buttons.add(left_button, page_button, right_button)
    buttons.add(link_button, street_button)

    cursor.execute(f"UPDATE `users` SET `id` = {id} WHERE `users`.`id` = {message.chat.id};")
    connect.commit()

    try:
        try:
            photo = open(img, 'rb')
        except:
            photo = img
        msg = f"*{name}*\n\n"
        msg += f"üíµ –û–ø–ª–∞—Ç–∞: {id_average_cost}\n"
        msg += f"‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: {id_rate}\n"
        msg += f"‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {numphone}\n\n"
        msg += f"{description}" if description != None else '_–Ω–µ—Ç_'

        bot.send_photo(message.chat.id, photo=photo, caption=msg, reply_markup=buttons, parse_mode='Markdown')
    except:
        msg = f"*{name}*\n\n"
        msg += f"üíµ –û–ø–ª–∞—Ç–∞: {id_average_cost}\n"
        msg += f"‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: {id_rate}\n"
        msg += f"‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {numphone}\n\n"
        msg += f"{description}" if description != None else '_–Ω–µ—Ç_'

        bot.send_message(message.chat.id, msg, reply_markup=buttons, parse_mode='Markdown')

    try:
        bot.delete_message(message.chat.id, previous_message.id)
    except:
        pass

@bot.message_handler(commands=['gameclub'])
def gameclub(message, id=1, previous_message=None):
    connect = sqlite3.connect("dada_db.db")
    cursor = connect.cursor()

    pages_count_query = cursor.execute(f"SELECT COUNT(*) FROM `game_club`")
    pages_count_gameclub = int(pages_count_query.fetchone()[0])
    buttons = types.InlineKeyboardMarkup()

    left_gameclub = id - 1 if id != 1 else pages_count_gameclub
    right_gameclub = id + 1 if id != pages_count_gameclub else 1

    product_query = cursor.execute(
        f"SELECT `name`, `id_rate`, `link`, `numphone`, `workschedule`, `street`, `description`, `img`, `id_average_cost` FROM `game_club` WHERE `id` = '{id}';")
    name, id_rate, link, numphone, workschedule, street, description, img, id_average_cost = product_query.fetchone()

    left_button = types.InlineKeyboardButton("‚Üê", callback_data=f'to gameclub | {left_gameclub}')
    page_button = types.InlineKeyboardButton(f"{str(id)}/{str(pages_count_gameclub)}", callback_data='_')
    right_button = types.InlineKeyboardButton("‚Üí", callback_data=f'to gameclub | {right_gameclub}')
    link_button = types.InlineKeyboardButton("–°–∞–π—Ç", url=link, callback_data='buy')
    street_button = types.InlineKeyboardButton("–Ø.–ö–∞—Ä—Ç—ã", url=street, callback_data='buy')
    buttons.add(left_button, page_button, right_button)
    buttons.add(link_button, street_button)

    cursor.execute(f"UPDATE `users` SET `id` = {id} WHERE `users`.`id` = {message.chat.id};")
    connect.commit()

    try:
        try:
            photo = open(img, 'rb')
        except:
            photo = img
        msg = f"*{name}*\n\n"
        msg += f"üíµ –û–ø–ª–∞—Ç–∞: {id_average_cost}\n"
        msg += f"‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: {id_rate}\n"
        msg += f"‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {numphone}\n"
        msg += f"üïò –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {workschedule}\n\n"
        msg += f"{description}" if description != None else '_–Ω–µ—Ç_'

        bot.send_photo(message.chat.id, photo=photo, caption=msg, reply_markup=buttons, parse_mode='Markdown')
    except:
        msg = f"*{name}*\n\n"
        msg += f"üíµ –û–ø–ª–∞—Ç–∞: {id_average_cost}\n"
        msg += f"‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: {id_rate}\n"
        msg += f"‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {numphone}\n"
        msg += f"üïò –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {workschedule}\n\n"
        msg += f"{description}" if description != None else '_–Ω–µ—Ç_'

        bot.send_message(message.chat.id, msg, reply_markup=buttons, parse_mode='Markdown')

    try:
        bot.delete_message(message.chat.id, previous_message.id)
    except:
        pass

@bot.message_handler(commands=['paintball_karting'])
def paintball_karting(message, id=1, previous_message=None):
    connect = sqlite3.connect("dada_db.db")
    cursor = connect.cursor()

    pages_count_query = cursor.execute(f"SELECT COUNT(*) FROM `paintball_karting`")
    pages_count_paintball_karting = int(pages_count_query.fetchone()[0])
    buttons = types.InlineKeyboardMarkup()

    left_paintball_karting = id - 1 if id != 1 else pages_count_paintball_karting
    right_paintball_karting = id + 1 if id != pages_count_paintball_karting else 1

    product_query = cursor.execute(
        f"SELECT `name`, `street`, `id_rate`, `img`, `link`, `numphone`, `id_average_cost`, `description` FROM `paintball_karting` WHERE `id` = '{id}';")
    name, street, id_rate, img, link, numphone, id_average_cost, description = product_query.fetchone()

    left_button = types.InlineKeyboardButton("‚Üê", callback_data=f'to paintball_karting | {left_paintball_karting}')
    page_button = types.InlineKeyboardButton(f"{str(id)}/{str(pages_count_paintball_karting)}", callback_data='_')
    right_button = types.InlineKeyboardButton("‚Üí", callback_data=f'to paintball_karting | {right_paintball_karting}')
    link_button = types.InlineKeyboardButton("–°–∞–π—Ç", url=link, callback_data='buy')
    street_button = types.InlineKeyboardButton("–Ø.–ö–∞—Ä—Ç—ã", url=street, callback_data='buy')
    buttons.add(left_button, page_button, right_button)
    buttons.add(link_button, street_button)

    cursor.execute(f"UPDATE `users` SET `id` = {id} WHERE `users`.`id` = {message.chat.id};")
    connect.commit()

    try:
        try:
            photo = open(img, 'rb')
        except:
            photo = img
        msg = f"*{name}*\n\n"
        msg += f"‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: {id_rate}\n"
        msg += f"‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {numphone}\n"
        msg += f"{id_average_cost}\n\n"
        msg += f"{description}"

        bot.send_photo(message.chat.id, photo=photo, caption=msg, reply_markup=buttons, parse_mode='Markdown')
    except:
        msg = f"*{name}*\n\n"
        msg += f"‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: {id_rate}\n"
        msg += f"‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {numphone}\n"
        msg += f"{id_average_cost}\n\n"
        msg += f"{description}"

        bot.send_message(message.chat.id, msg, reply_markup=buttons, parse_mode='Markdown')

    try:
        bot.delete_message(message.chat.id, previous_message.id)
    except:
        pass

@bot.message_handler(commands=['horseride'])
def horseride(message, id=1, previous_message=None):
    connect = sqlite3.connect("dada_db.db")
    cursor = connect.cursor()

    pages_count_query = cursor.execute(f"SELECT COUNT(*) FROM `horseride`")
    pages_count_horseride = int(pages_count_query.fetchone()[0])
    buttons = types.InlineKeyboardMarkup()

    left_horseride = id - 1 if id != 1 else pages_count_horseride
    right_horseride = id + 1 if id != pages_count_horseride else 1

    product_query = cursor.execute(
        f"SELECT `name`, `street`, `id_rate`, `img`, `link`, `contacts`, `id_average_cost`, `description` FROM `horseride` WHERE `id` = '{id}';")
    name, street, id_rate, img, link, contacts, id_average_cost, description = product_query.fetchone()

    left_button = types.InlineKeyboardButton("‚Üê", callback_data=f'to horseride | {left_horseride}')
    page_button = types.InlineKeyboardButton(f"{str(id)}/{str(pages_count_horseride)}", callback_data='_')
    right_button = types.InlineKeyboardButton("‚Üí", callback_data=f'to horseride | {right_horseride}')
    link_button = types.InlineKeyboardButton("–°–∞–π—Ç", url=link, callback_data='buy')
    street_button = types.InlineKeyboardButton("–Ø.–ö–∞—Ä—Ç—ã", url=street, callback_data='buy')
    buttons.add(left_button, page_button, right_button)
    buttons.add(link_button, street_button)

    cursor.execute(f"UPDATE `users` SET `id` = {id} WHERE `users`.`id` = {message.chat.id};")
    connect.commit()

    try:
        try:
            photo = open(img, 'rb')
        except:
            photo = img
        msg = f"*{name}*\n\n"
        msg += f"üíµ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: {id_average_cost}‚ÇΩ\n"
        msg += f"‚≠ê –†–µ–π—Ç–∏–Ω–≥: {id_rate}\n"
        msg += f"‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {contacts}\n\n"
        msg += f"{description}" if description != None else '_–Ω–µ—Ç_'

        bot.send_photo(message.chat.id, photo=photo, caption=msg, reply_markup=buttons, parse_mode='Markdown')
    except:
        msg = f"*{name}*\n\n"
        msg += f"üíµ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: {id_average_cost}\n"
        msg += f"‚≠ê –†–µ–π—Ç–∏–Ω–≥: {id_rate}\n"
        msg += f"‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {contacts}\n\n"
        msg += f"{description}" if description != None else '_–Ω–µ—Ç_'

        bot.send_message(message.chat.id, msg, reply_markup=buttons, parse_mode='Markdown')

    try:
        bot.delete_message(message.chat.id, previous_message.id)
    except:
        pass

@bot.message_handler(commands=['lounge_bar'])
def lounge_bar(message, id=1, previous_message=None):
    connect = sqlite3.connect("dada_db.db")
    cursor = connect.cursor()

    pages_count_query = cursor.execute(f"SELECT COUNT(*) FROM `lounge_bar`")
    pages_count_lounge_bar = int(pages_count_query.fetchone()[0])
    buttons = types.InlineKeyboardMarkup()

    left_lounge_bar = id - 1 if id != 1 else pages_count_lounge_bar
    right_lounge_bar = id + 1 if id != pages_count_lounge_bar else 1

    product_query = cursor.execute(
        f"SELECT `name`, `street`, `id_rate`, `description`, `img`, `link`, `id_average_cost`, `numphone` FROM `lounge_bar` WHERE `id` = '{id}';")
    name, street, id_rate, description, img, link, id_average_cost, numphone = product_query.fetchone()

    left_button = types.InlineKeyboardButton("‚Üê", callback_data=f'to lounge_bar | {left_lounge_bar}')
    page_button = types.InlineKeyboardButton(f"{str(id)}/{str(pages_count_lounge_bar)}", callback_data='_')
    right_button = types.InlineKeyboardButton("‚Üí", callback_data=f'to lounge_bar | {right_lounge_bar}')
    link_button = types.InlineKeyboardButton("–°–∞–π—Ç", url=link, callback_data='buy')
    street_button = types.InlineKeyboardButton("–Ø.–ö–∞—Ä—Ç—ã", url=street, callback_data='buy')
    buttons.add(left_button, page_button, right_button)
    buttons.add(link_button, street_button)

    cursor.execute(f"UPDATE `users` SET `id` = {id} WHERE `users`.`id` = {message.chat.id};")
    connect.commit()

    try:
        try:
            photo = open(img, 'rb')
        except:
            photo = img
        msg = f"*{name}*\n\n"
        msg += f"‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: {id_rate}\n"
        msg += f"üíµ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: {id_average_cost}‚ÇΩ\n"
        msg += f"‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {numphone}\n\n"
        msg += f"{description}" if description != None else '_–Ω–µ—Ç_'

        bot.send_photo(message.chat.id, photo=photo, caption=msg, reply_markup=buttons, parse_mode='Markdown')
    except:
        msg = f"*{name}*\n\n"
        msg += f"‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: {id_rate}\n"
        msg += f"üíµ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: {id_average_cost}‚ÇΩ\n"
        msg += f"‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {numphone}\n\n"
        msg += f"{description}" if description != None else '_–Ω–µ—Ç_'

        bot.send_message(message.chat.id, msg, reply_markup=buttons, parse_mode='Markdown')

    try:
        bot.delete_message(message.chat.id, previous_message.id)
    except:
        pass

@bot.message_handler(commands=['pool'])
def pool(message, id=1, previous_message=None):
    connect = sqlite3.connect("dada_db.db")
    cursor = connect.cursor()

    pages_count_query = cursor.execute(f"SELECT COUNT(*) FROM `pool`")
    pages_count_pool = int(pages_count_query.fetchone()[0])
    buttons = types.InlineKeyboardMarkup()

    left_pool = id - 1 if id != 1 else pages_count_pool
    right_pool = id + 1 if id != pages_count_pool else 1

    product_query = cursor.execute(
        f"SELECT `name`, `id_rate`, `numphone`, `street`, `workschedule`, `id_average_cost`, `link`, `description`, `img` FROM `pool` WHERE `id` = '{id}';")
    name, id_rate, numphone, street, workschedule, id_average_cost, link, description, img = product_query.fetchone()

    left_button = types.InlineKeyboardButton("‚Üê", callback_data=f'to pool | {left_pool}')
    page_button = types.InlineKeyboardButton(f"{str(id)}/{str(pages_count_pool)}", callback_data='_')
    right_button = types.InlineKeyboardButton("‚Üí", callback_data=f'to pool | {right_pool}')
    link_button = types.InlineKeyboardButton("–°–∞–π—Ç", url=link, callback_data='buy')
    street_button = types.InlineKeyboardButton("–Ø.–ö–∞—Ä—Ç—ã", url=street, callback_data='buy')
    buttons.add(left_button, page_button, right_button)
    buttons.add(link_button, street_button)

    cursor.execute(f"UPDATE `users` SET `id` = {id} WHERE `users`.`id` = {message.chat.id};")
    connect.commit()

    try:
        try:
            photo = open(img, 'rb')
        except:
            photo = img
        msg = f"*{name}*\n\n"
        msg += f"‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: {id_rate}\n"
        msg += f"üíµ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: {id_average_cost}‚ÇΩ\n"
        msg += f"‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {numphone}\n"
        msg += f"üïò –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {workschedule}\n\n"
        msg += f"{description}" if description != None else '_–Ω–µ—Ç_'

        bot.send_photo(message.chat.id, photo=photo, caption=msg, reply_markup=buttons, parse_mode='Markdown')
    except:
        msg = f"*{name}*\n\n"
        msg += f"‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: {id_rate}\n"
        msg += f"üíµ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: {id_average_cost}‚ÇΩ\n"
        msg += f"‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {numphone}\n"
        msg += f"üïò –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {workschedule}\n\n"
        msg += f"{description}" if description != None else '_–Ω–µ—Ç_'

        bot.send_message(message.chat.id, msg, reply_markup=buttons, parse_mode='Markdown')

    try:
        bot.delete_message(message.chat.id, previous_message.id)
    except:
        pass

@bot.message_handler(commands=['kvizi'])
def kvizi(message, id=1, previous_message=None):
    connect = sqlite3.connect("dada_db.db")
    cursor = connect.cursor()

    pages_count_query = cursor.execute(f"SELECT COUNT(*) FROM `kvizi`")
    pages_count_kvizi = int(pages_count_query.fetchone()[0])
    buttons = types.InlineKeyboardMarkup()

    left_kvizi = id - 1 if id != 1 else pages_count_kvizi
    right_kvizi = id + 1 if id != pages_count_kvizi else 1

    product_query = cursor.execute(
        f"SELECT `name`, `street`, `descript`, `numphone`, `img`, `id_average_cost` FROM `kvizi` WHERE `id` = '{id}';")
    name, street, descript, numphone, img, id_average_cost = product_query.fetchone()

    left_button = types.InlineKeyboardButton("‚Üê", callback_data=f'to kvizi | {left_kvizi}')
    page_button = types.InlineKeyboardButton(f"{str(id)}/{str(pages_count_kvizi)}", callback_data='_')
    right_button = types.InlineKeyboardButton("‚Üí", callback_data=f'to kvizi | {right_kvizi}')
    street_button = types.InlineKeyboardButton("–°—Å—ã–ª–∫–∞", url=street, callback_data='buy')
    buttons.add(left_button, page_button, right_button)
    buttons.add(street_button)

    cursor.execute(f"UPDATE `users` SET `id` = {id} WHERE `users`.`id` = {message.chat.id};")
    connect.commit()

    try:
        try:
            photo = open(img, 'rb')
        except:
            photo = img
        msg = f"*{name}*\n\n"
        msg += f"‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {numphone}\n"
        msg += f"üíµ –û–ø–ª–∞—Ç–∞: {id_average_cost}\n\n"
        msg += f"{descript}" if descript != None else '_–Ω–µ—Ç_'

        bot.send_photo(message.chat.id, photo=photo, caption=msg, reply_markup=buttons, parse_mode='Markdown')
    except:
        msg = f"*{name}*\n\n"
        msg += f"‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {numphone}\n"
        msg += f"üíµ –û–ø–ª–∞—Ç–∞: {id_average_cost}\n\n"
        msg += f"{descript}" if descript != None else '_–Ω–µ—Ç_'

        bot.send_message(message.chat.id, msg, reply_markup=buttons)

    try:
        bot.delete_message(message.chat.id, previous_message.id)
    except:
        pass

@bot.message_handler(commands=['bar_pub'])
def bar_pub(message, id=1, previous_message=None):
    connect = sqlite3.connect("dada_db.db")
    cursor = connect.cursor()

    pages_count_query = cursor.execute(f"SELECT COUNT(*) FROM `bar_pub`")
    pages_count_bar_pub = int(pages_count_query.fetchone()[0])
    buttons = types.InlineKeyboardMarkup()

    left_bar_pub = id - 1 if id != 1 else pages_count_bar_pub
    right_bar_pub = id + 1 if id != pages_count_bar_pub else 1

    product_query = cursor.execute(
        f"SELECT `name`, `street`, `id_rate`, `description`, `img`, `link`, `id_average_cost`, `numphone` FROM `bar_pub` WHERE `id` = '{id}';")
    name, street, id_rate, description, img, link, id_average_cost, numphone = product_query.fetchone()

    left_button = types.InlineKeyboardButton("‚Üê", callback_data=f'to bar_pub | {left_bar_pub}')
    page_button = types.InlineKeyboardButton(f"{str(id)}/{str(pages_count_bar_pub)}", callback_data='_')
    right_button = types.InlineKeyboardButton("‚Üí", callback_data=f'to bar_pub | {right_bar_pub}')
    link_button = types.InlineKeyboardButton("–°–∞–π—Ç", url=link, callback_data='buy')
    street_button = types.InlineKeyboardButton("–Ø.–ö–∞—Ä—Ç—ã", url=street, callback_data='buy')
    buttons.add(left_button, page_button, right_button)
    buttons.add(link_button, street_button)

    cursor.execute(f"UPDATE `users` SET `id` = {id} WHERE `users`.`id` = {message.chat.id};")
    connect.commit()

    try:
        try:
            photo = open(img, 'rb')
        except:
            photo = img
        msg = f"*{name}*\n\n"
        msg += f"‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: {id_rate}\n"
        msg += f"üíµ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: {id_average_cost}‚ÇΩ\n"
        msg += f"‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {numphone}\n\n"
        msg += f"{description}" if description != None else '_–Ω–µ—Ç_'

        bot.send_photo(message.chat.id, photo=photo, caption=msg, reply_markup=buttons, parse_mode='Markdown')
    except:
        msg = f"*{name}*\n\n"
        msg += f"‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: {id_rate}\n"
        msg += f"üíµ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: {id_average_cost}‚ÇΩ\n"
        msg += f"‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {numphone}\n\n"
        msg += f"{description}" if description != None else '_–Ω–µ—Ç_'

        bot.send_message(message.chat.id, msg, reply_markup=buttons, parse_mode='Markdown')

    try:
        bot.delete_message(message.chat.id, previous_message.id)
    except:
        pass

@bot.message_handler(commands=['table_games'])
def table_games(message, id=1, previous_message=None):
    connect = sqlite3.connect("dada_db.db")
    cursor = connect.cursor()

    pages_count_query = cursor.execute(f"SELECT COUNT(*) FROM `table_games`")
    pages_count_table_games = int(pages_count_query.fetchone()[0])
    buttons = types.InlineKeyboardMarkup()

    left_table_games = id - 1 if id != 1 else pages_count_table_games
    right_table_games = id + 1 if id != pages_count_table_games else 1

    product_query = cursor.execute(
        f"SELECT `name`, `street`, `descript`, `link`, `numphone`, `img`, `id_rate`, `id_average_cost` FROM `table_games` WHERE `id` = '{id}';")
    name, street, descript, link, numphone, img, id_rate, id_average_cost = product_query.fetchone()

    left_button = types.InlineKeyboardButton("‚Üê", callback_data=f'to table_games | {left_table_games}')
    page_button = types.InlineKeyboardButton(f"{str(id)}/{str(pages_count_table_games)}", callback_data='_')
    right_button = types.InlineKeyboardButton("‚Üí", callback_data=f'to table_games | {right_table_games}')
    link_button = types.InlineKeyboardButton("–°–∞–π—Ç", url=link, callback_data='buy')
    street_button = types.InlineKeyboardButton("–Ø.–ö–∞—Ä—Ç—ã", url=street, callback_data='buy')
    buttons.add(left_button, page_button, right_button)
    buttons.add(link_button, street_button)

    cursor.execute(f"UPDATE `users` SET `id` = {id} WHERE `users`.`id` = {message.chat.id};")
    connect.commit()

    try:
        try:
            photo = open(img, 'rb')
        except:
            photo = img
        msg = f"*{name}*\n\n"
        msg += f"‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: {id_rate}\n"
        msg += f"üíµ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: {id_average_cost}‚ÇΩ\n"
        msg += f"‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {numphone}\n\n"
        msg += f"{descript}" if descript != None else '_–Ω–µ—Ç_'

        bot.send_photo(message.chat.id, photo=photo, caption=msg, reply_markup=buttons, parse_mode='Markdown')
    except:
        msg = f"*{name}*\n\n"
        msg += f"‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: {id_rate}\n"
        msg += f"üíµ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: {id_average_cost}‚ÇΩ\n"
        msg += f"‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {numphone}\n\n"
        msg += f"{descript}" if descript != None else '_–Ω–µ—Ç_'

        bot.send_message(message.chat.id, msg, reply_markup=buttons, parse_mode='Markdown')

    try:
        bot.delete_message(message.chat.id, previous_message.id)
    except:
        pass

@bot.message_handler(commands=['pastry_shops'])
def pastry_shops(message, id=1, previous_message=None):
    connect = sqlite3.connect("dada_db.db")
    cursor = connect.cursor()

    pages_count_query = cursor.execute(f"SELECT COUNT(*) FROM `pastry_shops`")
    pages_count_pastry_shops = int(pages_count_query.fetchone()[0])
    buttons = types.InlineKeyboardMarkup()

    left_pastry_shops = id - 1 if id != 1 else pages_count_pastry_shops
    right_pastry_shops = id + 1 if id != pages_count_pastry_shops else 1

    product_query = cursor.execute(
        f"SELECT `name`, `street`, `descript`, `link`, `numphone`, `img`, `id_rate`, `id_average_cost` FROM `pastry_shops` WHERE `id` = '{id}';")
    name, street, descript, link, numphone, img, id_rate, id_average_cost = product_query.fetchone()

    left_button = types.InlineKeyboardButton("‚Üê", callback_data=f'to pastry_shops | {left_pastry_shops}')
    page_button = types.InlineKeyboardButton(f"{str(id)}/{str(pages_count_pastry_shops)}", callback_data='_')
    right_button = types.InlineKeyboardButton("‚Üí", callback_data=f'to pastry_shops | {right_pastry_shops}')
    link_button = types.InlineKeyboardButton("–°–∞–π—Ç", url=link, callback_data='buy')
    street_button = types.InlineKeyboardButton("–Ø.–ö–∞—Ä—Ç—ã", url=street, callback_data='buy')
    buttons.add(left_button, page_button, right_button)
    buttons.add(link_button, street_button)

    cursor.execute(f"UPDATE `users` SET `id` = {id} WHERE `users`.`id` = {message.chat.id};")
    connect.commit()

    try:
        try:
            photo = open(img, 'rb')
        except:
            photo = img
        msg = f"*{name}*\n\n"
        msg += f"‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: {id_rate}\n"
        msg += f"üíµ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: {id_average_cost}‚ÇΩ\n"
        msg += f"‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {numphone}\n\n"
        msg += f"{descript}" if descript != None else '_–Ω–µ—Ç_'

        bot.send_photo(message.chat.id, photo=photo, caption=msg, reply_markup=buttons, parse_mode='Markdown')

    except:
        msg = f"*{name}*\n\n"
        msg += f"‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: {id_rate}\n"
        msg += f"üíµ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: {id_average_cost}‚ÇΩ\n"
        msg += f"‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {numphone}\n\n"
        msg += f"{descript}" if descript != None else '_–Ω–µ—Ç_'

        bot.send_message(message.chat.id, msg, reply_markup=buttons, parse_mode='Markdown')

    try:
        bot.delete_message(message.chat.id, previous_message.id)
    except:
        pass
# –û–±–∑–æ—Ä–Ω—ã–µ –º–µ—Å—Ç–∞

@bot.message_handler(commands=['route_1'])
def route_1(message, id=1, previous_message=None):

    if user_state.get(message.chat.id) == 'pressed':

        connect = sqlite3.connect("dada_db.db")
        cursor = connect.cursor()

        pages_count_query = cursor.execute(f"SELECT COUNT(*) FROM `route_1`")
        pages_count_route_1 = int(pages_count_query.fetchone()[0])
        buttons = types.InlineKeyboardMarkup()

        left_route_1 = id - 1 if id != 1 else pages_count_route_1
        right_route_1 = id + 1 if id != pages_count_route_1 else 1

        product_query = cursor.execute(
            f"SELECT `description`, `link`, `name` FROM `route_1` WHERE `id` = '{id}';")
        description, link, name = product_query.fetchone()

        left_button = types.InlineKeyboardButton("‚Üê", callback_data=f'to route_1 | {left_route_1}')
        page_button = types.InlineKeyboardButton(f"{str(id)}/{str(pages_count_route_1)}", callback_data='_')
        right_button = types.InlineKeyboardButton("‚Üí", callback_data=f'to route_1 | {right_route_1}')
        buttons.add(left_button, page_button, right_button)

        cursor.execute(f"UPDATE `users` SET `id` = {id} WHERE `users`.`id` = {message.chat.id};")
        connect.commit()

        try:
            try:
                photo = open(link, 'rb')
            except:
                photo = link
            msg = f"*{name}*\n\n"
            msg += f"{description}" if description != None else '_–Ω–µ—Ç_'

            bot.send_photo(message.chat.id, photo=photo, caption=msg, reply_markup=buttons, parse_mode='Markdown')

        except:
            msg = f"*{name}*\n\n"
            msg += f"{description}" if description != None else '_–Ω–µ—Ç_'

            bot.send_message(message.chat.id, msg, reply_markup=buttons, parse_mode='Markdown')

        try:
            bot.delete_message(message.chat.id, previous_message.id)
        except:
            pass

    else:
        bot.send_message(message.chat.id, '–í—ã –Ω–µ –æ–ø–ª–∞—Ç–∏–ª–∏ –ø–æ–¥–ø–∏—Å–∫—É ‚ùå')

@bot.message_handler(commands=['route_2'])
def route_2(message, id=1, previous_message=None):

    if user_state.get(message.chat.id) == 'pressed':

        connect = sqlite3.connect("dada_db.db")
        cursor = connect.cursor()

        pages_count_query = cursor.execute(f"SELECT COUNT(*) FROM `route_2`")
        pages_count_route_2 = int(pages_count_query.fetchone()[0])
        buttons = types.InlineKeyboardMarkup()

        left_route_2 = id - 1 if id != 1 else pages_count_route_2
        right_route_2 = id + 1 if id != pages_count_route_2 else 1

        product_query = cursor.execute(
            f"SELECT `name`, `description`, `img` FROM `route_2` WHERE `id` = '{id}';")
        name, description, img = product_query.fetchone()

        left_button = types.InlineKeyboardButton("‚Üê", callback_data=f'to route_2 | {left_route_2}')
        page_button = types.InlineKeyboardButton(f"{str(id)}/{str(pages_count_route_2)}", callback_data='_')
        right_button = types.InlineKeyboardButton("‚Üí", callback_data=f'to route_2 | {right_route_2}')
        buttons.add(left_button, page_button, right_button)

        cursor.execute(f"UPDATE `users` SET `id` = {id} WHERE `users`.`id` = {message.chat.id};")
        connect.commit()

        try:
            try:
                photo = open(img, 'rb')
            except:
                photo = img
            msg = f"*{name}*\n\n"
            msg += f"{description}" if description != None else '_–Ω–µ—Ç_'

            bot.send_photo(message.chat.id, photo=photo, caption=msg, reply_markup=buttons, parse_mode='Markdown')

        except:
            msg = f"*{name}*\n\n"
            msg += f"{description}" if description != None else '_–Ω–µ—Ç_'

            bot.send_message(message.chat.id, msg, reply_markup=buttons, parse_mode='Markdown')

        try:
            bot.delete_message(message.chat.id, previous_message.id)
        except:
            pass

    else:
        bot.send_message(message.chat.id, '–í—ã –Ω–µ –æ–ø–ª–∞—Ç–∏–ª–∏ –ø–æ–¥–ø–∏—Å–∫—É ‚ùå')

@bot.message_handler(commands=['route_3'])
def route_3(message, id=1, previous_message=None):

    if user_state.get(message.chat.id) == 'pressed':

        connect = sqlite3.connect("dada_db.db")
        cursor = connect.cursor()

        pages_count_query = cursor.execute(f"SELECT COUNT(*) FROM `route_3`")
        pages_count_route_3 = int(pages_count_query.fetchone()[0])
        buttons = types.InlineKeyboardMarkup()

        left_route_3 = id - 1 if id != 1 else pages_count_route_3
        right_route_3 = id + 1 if id != pages_count_route_3 else 1

        product_query = cursor.execute(
            f"SELECT `name`, `description`, `img` FROM `route_3` WHERE `id` = '{id}';")
        name, description, img = product_query.fetchone()

        left_button = types.InlineKeyboardButton("‚Üê", callback_data=f'to route_3 | {left_route_3}')
        page_button = types.InlineKeyboardButton(f"{str(id)}/{str(pages_count_route_3)}", callback_data='_')
        right_button = types.InlineKeyboardButton("‚Üí", callback_data=f'to route_3 | {right_route_3}')
        buttons.add(left_button, page_button, right_button)

        cursor.execute(f"UPDATE `users` SET `id` = {id} WHERE `users`.`id` = {message.chat.id};")
        connect.commit()

        try:
            try:
                photo = open(img, 'rb')
            except:
                photo = img
            msg = f"*{name}*\n\n"
            msg += f"{description}" if description != None else '_–Ω–µ—Ç_'

            bot.send_photo(message.chat.id, photo=photo, caption=msg, reply_markup=buttons, parse_mode='Markdown')

        except:
            msg = f"*{name}*\n\n"
            msg += f"{description}" if description != None else '_–Ω–µ—Ç_'

            bot.send_message(message.chat.id, msg, reply_markup=buttons, parse_mode='Markdown')

        try:
            bot.delete_message(message.chat.id, previous_message.id)
        except:
            pass

    else:
        bot.send_message(message.chat.id, '–í—ã –Ω–µ –æ–ø–ª–∞—Ç–∏–ª–∏ –ø–æ–¥–ø–∏—Å–∫—É ‚ùå')

@bot.message_handler(commands=['foto_1'])
def foto_1(message, id=1, previous_message=None):

    if user_state.get(message.chat.id) == 'pressed':

        connect = sqlite3.connect("dada_db.db")
        cursor = connect.cursor()

        pages_count_query = cursor.execute(f"SELECT COUNT(*) FROM `foto_1`")
        pages_count_foto_1 = int(pages_count_query.fetchone()[0])
        buttons = types.InlineKeyboardMarkup()

        left_foto_1 = id - 1 if id != 1 else pages_count_foto_1
        right_foto_1 = id + 1 if id != pages_count_foto_1 else 1

        product_query = cursor.execute(
            f"SELECT `name`, `what`, `id_average_cost`, `id_rate`, `numphone`, `description`, `img` FROM `foto_1` WHERE `id` = '{id}';")
        name, what, id_average_cost, id_rate, numphone, description, img = product_query.fetchone()

        left_button = types.InlineKeyboardButton("‚Üê", callback_data=f'to foto_1 | {left_foto_1}')
        page_button = types.InlineKeyboardButton(f"{str(id)}/{str(pages_count_foto_1)}", callback_data='_')
        right_button = types.InlineKeyboardButton("‚Üí", callback_data=f'to foto_1 | {right_foto_1}')
        buttons.add(left_button, page_button, right_button)

        cursor.execute(f"UPDATE `users` SET `id` = {id} WHERE `users`.`id` = {message.chat.id};")
        connect.commit()

        try:
            try:
                photo = open(img, 'rb')
            except:
                photo = img
            msg = f"*{name}*\n\n"
            msg += f"{what}\n" if what != None else None

            bot.send_photo(message.chat.id, photo=photo, caption=msg, reply_markup=buttons, parse_mode='Markdown')

        except:
            msg = f"*{name}*\n\n"
            msg += f"{what}\n" if what != None else None

            bot.send_message(message.chat.id, msg, reply_markup=buttons, parse_mode='Markdown')

        try:
            bot.delete_message(message.chat.id, previous_message.id)
        except:
            pass

    else:
        bot.send_message(message.chat.id, '–í—ã –Ω–µ –æ–ø–ª–∞—Ç–∏–ª–∏ –ø–æ–¥–ø–∏—Å–∫—É ‚ùå')

@bot.message_handler(commands=['foto_2'])
def foto_2(message, id=1, previous_message=None):

    if user_state.get(message.chat.id) == 'pressed':

        connect = sqlite3.connect("dada_db.db")
        cursor = connect.cursor()

        pages_count_query = cursor.execute(f"SELECT COUNT(*) FROM `foto_2`")
        pages_count_foto_2 = int(pages_count_query.fetchone()[0])
        buttons = types.InlineKeyboardMarkup()

        left_foto_2 = id - 1 if id != 1 else pages_count_foto_2
        right_foto_2 = id + 1 if id != pages_count_foto_2 else 1

        product_query = cursor.execute(
            f"SELECT `name`, `what`, `id_average_cost`, `id_rate`, `numphone`, `description`, `img` FROM `foto_2` WHERE `id` = '{id}';")
        name, what, id_average_cost, id_rate, numphone, description, img = product_query.fetchone()

        left_button = types.InlineKeyboardButton("‚Üê", callback_data=f'to foto_2 | {left_foto_2}')
        page_button = types.InlineKeyboardButton(f"{str(id)}/{str(pages_count_foto_2)}", callback_data='_')
        right_button = types.InlineKeyboardButton("‚Üí", callback_data=f'to foto_2 | {right_foto_2}')
        buttons.add(left_button, page_button, right_button)

        cursor.execute(f"UPDATE `users` SET `id` = {id} WHERE `users`.`id` = {message.chat.id};")
        connect.commit()

        try:
            try:
                photo = open(img, 'rb')
            except:
                photo = img
            msg = f"*{name}*\n\n"
            msg += f"{what}\n" if what != None else None

            bot.send_photo(message.chat.id, photo=photo, caption=msg, reply_markup=buttons, parse_mode='Markdown')

        except:
            msg = f"*{name}*\n\n"
            msg += f"{what}\n" if what != None else None

            bot.send_message(message.chat.id, msg, reply_markup=buttons, parse_mode='Markdown')

        try:
            bot.delete_message(message.chat.id, previous_message.id)
        except:
            pass

    else:
        bot.send_message(message.chat.id, '–í—ã –Ω–µ –æ–ø–ª–∞—Ç–∏–ª–∏ –ø–æ–¥–ø–∏—Å–∫—É ‚ùå')

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback

@bot.callback_query_handler(func=lambda c: True)
def callback_query(call):

    try:
        if 'to' in call.data:
            id = int(call.data.split('|')[-1])

            if "canteen" in call.data:
                canteen(call.message, id, call.message)

            elif "asianfood" in call.data:
                asianfood(call.message, id, call.message)

            elif "fastfood" in call.data:
                fastfood(call.message, id, call.message)

            elif "slavicfood" in call.data:
                slavicfood(call.message, id, call.message)

            elif "seafood" in call.data:
                seafood(call.message, id, call.message)

            elif "questroom" in call.data:
                questroom(call.message, id, call.message)

            elif "nightclub" in call.data:
                nightclub(call.message, id, call.message)

            elif "italianfood" in call.data:
                italianfood(call.message, id, call.message)

            elif "georgianfood" in call.data:
                georgianfood(call.message, id, call.message)

            elif "karaoke" in call.data:
                karaoke(call.message, id, call.message)

            elif "anticafe" in call.data:
                anticafe(call.message, id, call.message)

            elif "gameclub" in call.data:
                gameclub(call.message, id, call.message)

            elif "paintball_karting" in call.data:
                paintball_karting(call.message, id, call.message)

            elif "horseride" in call.data:
                horseride(call.message, id, call.message)

            elif "lounge_bar" in call.data:
                lounge_bar(call.message, id, call.message)

            elif "pool" in call.data:
                pool(call.message, id, call.message)

            elif "kvizi" in call.data:
                kvizi(call.message, id, call.message)

            elif "bar_pub" in call.data:
                bar_pub(call.message, id, call.message)

            elif "table_games" in call.data:
                table_games(call.message, id, call.message)

            elif "pastry_shops" in call.data:
                pastry_shops(call.message, id, call.message)

            elif "route_1" in call.data:
                route_1(call.message, id, call.message)

            elif "route_2" in call.data:
                route_2(call.message, id, call.message)

            elif "route_3" in call.data:
                route_3(call.message, id, call.message)

            elif "foto_1" in call.data:
                foto_1(call.message, id, call.message)

            elif "foto_2" in call.data:
                foto_2(call.message, id, call.message)

        elif call.message:

            if call.data == '1_month':

                markup = types.InlineKeyboardMarkup(row_width=1)

                instagramm = types.InlineKeyboardButton("–°—Å—ã–ª–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É", url='https://www.tinkoff.ru/',
                                                    callback_data='oplata')
                sales = types.InlineKeyboardButton("–Ø –æ–ø–ª–∞—Ç–∏–ª ‚úÖ", callback_data='pay')

                markup.add(instagramm, sales)

                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text='–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –ø–ª–∞—Ç–Ω—ã–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º –Ω–∞ 1 –º–µ—Å—è—Ü, –æ–ø–ª–∞—Ç–∏—Ç–µ —á–µ–∫ –ø–æ —Å—Å—ã–ª–∫–µ –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–Ø –æ–ø–ª–∞—Ç–∏–ª ‚úÖ"',
                                  reply_markup=markup)

            elif call.data == '6_month':

                markup = types.InlineKeyboardMarkup(row_width=1)

                instagramm = types.InlineKeyboardButton("–°—Å—ã–ª–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É", url='https://www.tinkoff.ru/',
                                                    callback_data='oplata')
                sales = types.InlineKeyboardButton("–Ø –æ–ø–ª–∞—Ç–∏–ª ‚úÖ", callback_data='pay')

                markup.add(instagramm, sales)

                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text='–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –ø–ª–∞—Ç–Ω—ã–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º –Ω–∞ 6 –º–µ—Å—è—Ü–µ–≤, –æ–ø–ª–∞—Ç–∏—Ç–µ —á–µ–∫ –ø–æ —Å—Å—ã–ª–∫–µ –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–Ø –æ–ø–ª–∞—Ç–∏–ª ‚úÖ"',
                                  reply_markup=markup)

            elif call.data == '12_month':

                markup = types.InlineKeyboardMarkup(row_width=1)

                instagramm = types.InlineKeyboardButton("–°—Å—ã–ª–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É", url='https://www.tinkoff.ru/',
                                                    callback_data='oplata')
                sales = types.InlineKeyboardButton("–Ø –æ–ø–ª–∞—Ç–∏–ª ‚úÖ", callback_data='pay')

                markup.add(instagramm, sales)

                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text='–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –ø–ª–∞—Ç–Ω—ã–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º –Ω–∞ 12 –º–µ—Å—è—Ü–µ–≤, –æ–ø–ª–∞—Ç–∏—Ç–µ —á–µ–∫ –ø–æ —Å—Å—ã–ª–∫–µ –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–Ø –æ–ø–ª–∞—Ç–∏–ª ‚úÖ"',
                                  reply_markup=markup)

            elif call.data == 'pay':

                user_state[call.message.chat.id] = 'pressed'

                markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
                eat = types.KeyboardButton("–ì–¥–µ –ø–æ–µ—Å—Ç—å? üçú")
                time = types.KeyboardButton("–ö–∞–∫ –ø—Ä–æ–≤–µ—Å—Ç–∏ –≤—Ä–µ–º—è? üëÄ")
                pay = types.KeyboardButton("–ü–ª–∞—Ç–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è üíµ")

                markup.add(eat, time, pay)

                bot.send_message(call.message.chat.id, '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!\n\n'
                                                   '–í—ã –ø–æ–¥–¥–µ—Ä–∂–∞–ª–∏ –Ω–∞—à –ø—Ä–æ–µ–∫—Ç, –∏ —Ç–µ–ø–µ—Ä—å —É –í–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ –ø–ª–∞—Ç–Ω–æ–º—É –∫–æ–Ω—Ç–µ–Ω—Ç—É.', reply_markup=markup)

                bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)

    except Exception as e:
        print(repr(e))

@bot.message_handler(commands=['about'])

def about(message):

    bot.send_message(message.chat.id, "–ú—ã - –∫–æ–º–∞–Ω–¥–∞ –¢23–û–ù-01, —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–ª–∏ —ç—Ç–æ–≥–æ –±–æ—Ç–∞ –¥–ª—è –∏—Ç–æ–≥–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ –ø–æ –º–æ–¥—É–ª—é ¬´–û—Å–Ω–æ–≤—ã —ç–∫–æ–Ω–æ–º–∏–∫–∏ –∏ –±–∏–∑–Ω–µ—Å–∞¬ª. –ù–∞–¥ –Ω–∏–º —Ä–∞–±–æ—Ç–∞–ª–∏ –ª—É—á—à–∏–µ —É–º—ã –∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã –≤—Å–µ–≥–æ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞. –ù–∞–¥–µ–µ–º—Å—è, —á—Ç–æ –æ–Ω –í–∞–º –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è:)\n\n"
                                      "–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –±–æ—Ç–∞ –±—ã–ª–∞ —Å–¥–µ–ª–∞–Ω–∞ —Å –Ω—É–ª—è –ø—Ä–∏ –ø–æ–º–æ—â–∏ —è–∑—ã–∫–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è Python –∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö Sqlite3, –∞ —Ç–∞–∫–∂–µ —Å –∏–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ pyTelegramBotAPI\n\n"
                                      "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä, –ø–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º: @kxwarvta")

    # bot.send_media_group(message.chat.id, [telebot.types.InputMediaPhoto(open('photo_bot/volgograd.jpg', 'rb'))])

@bot.message_handler(content_types=['text'])

def lalala(message):

    if message.chat.type == 'private':

        #–≤–µ—Ç–∫–∞ "–ì–¥–µ –ø–æ–µ—Å—Ç—å?"

        if message.text == '–ì–¥–µ –ø–æ–µ—Å—Ç—å? üçú':

            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)

            kitchen_selection = types.KeyboardButton("–í—ã–±–æ—Ä –∫—É—Ö–Ω–∏ ü§î")
            popular_establishments = types.KeyboardButton("–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è üîù")
            establishments_nearby = types.KeyboardButton("–ó–∞–≤–µ–¥–µ–Ω–∏—è —Ä—è–¥–æ–º üìç")
            back = types.KeyboardButton("–ù–∞–∑–∞–¥ üîô")

            markup.add(kitchen_selection, popular_establishments, establishments_nearby, back)

            bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—Ç–æ:', reply_markup=markup)

        #–¥–æ—á–µ—Ä–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "–ì–¥–µ –ø–æ–µ—Å—Ç—å?"

        elif message.text == '–í—ã–±–æ—Ä –∫—É—Ö–Ω–∏ ü§î':

            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)

            seafood = types.KeyboardButton("–ú–æ—Ä—Å–∫–∞—è ü¶ê")
            asianfood = types.KeyboardButton("–ê–∑–∏–∞—Ç—Å–∫–∞—è üç£")
            georgianfood = types.KeyboardButton("–ì—Ä—É–∑–∏–Ω—Å–∫–∞—è ü•ô")
            italianfood = types.KeyboardButton("–ò—Ç–∞–ª—å—è–Ω—Å–∫–∞—è üçï")
            slavicfood = types.KeyboardButton("–°–ª–∞–≤—è–Ω—Å–∫–∞—è ü•ò")
            fastfood = types.KeyboardButton("–§–∞—Å—Ç—Ñ—É–¥—ã üçî")
            pastry_shops = types.KeyboardButton("–ö–æ–Ω–¥–∏—Ç–µ—Ä—Å–∫–∏–µ üç¨")
            bar_pub = types.KeyboardButton("–ë–∞—Ä—ã –∏ –ø–∞–±—ã üç∏")
            canteen = types.KeyboardButton("–°—Ç–æ–ª–æ–≤—ã–µ üç≤")
            back = types.KeyboardButton("–ù–∞–∑–∞–¥ üîô")

            markup.add(seafood, asianfood, georgianfood, italianfood, slavicfood, fastfood, bar_pub, canteen)
            markup.add(pastry_shops, back)

            bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ö–Ω—é:', reply_markup=markup)

        elif message.text == '–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è üîù':

            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

            niche_harcho = types.KeyboardButton("–ù–∏—á—ë –•–∞—Ä—á–æ!")
            erti = types.KeyboardButton("–≠—Ä—Ç–∏")
            magadan = types.KeyboardButton("–ú–∞–≥–∞–¥–∞–Ω")
            sumo_sam = types.KeyboardButton("Sumo Sam")
            cow = types.KeyboardButton("–ö–æ—Ä–æ–≤–∞")
            cheese_factory = types.KeyboardButton("–°—ã—Ä–æ–≤–∞—Ä–Ω—è")
            back = types.KeyboardButton("–ù–∞–∑–∞–¥ üîô")

            markup.add(niche_harcho, erti, magadan, sumo_sam, cow, cheese_factory, back)

            bot.send_message(message.chat.id, '–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è üîù', reply_markup=markup)

        elif message.text == '–ó–∞–≤–µ–¥–µ–Ω–∏—è —Ä—è–¥–æ–º üìç':

            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)

            location = types.KeyboardButton("–ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–≤–µ–¥–µ–Ω–∏—è —Ä—è–¥–æ–º", request_location=True)
            back = types.KeyboardButton("–ù–∞–∑–∞–¥ üîô")

            markup.add(location, back)

            bot.send_message(message.chat.id, "–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –º–µ—Å—Ç–æ—Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ", reply_markup=markup)

        #–≤–µ—Ç–∫–∞ "–ö–∞–∫ –ø—Ä–æ–≤–µ—Å—Ç–∏ –≤—Ä–µ–º—è?"

        elif message.text == '–ö–∞–∫ –ø—Ä–æ–≤–µ—Å—Ç–∏ –≤—Ä–µ–º—è? üëÄ':

            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)

            chill = types.KeyboardButton("–†–∞—Å—Å–ª–∞–±–∏—Ç—å—Å—è üòÆ‚Äçüí®")
            view_the_city = types.KeyboardButton("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≥–æ—Ä–æ–¥ üëÄ")
            benefit = types.KeyboardButton("–û—Ç–¥–æ—Ö–Ω—É—Ç—å —Å –ø–æ–ª—å–∑–æ–π ‚ò∫Ô∏è")
            back = types.KeyboardButton("–ù–∞–∑–∞–¥ üîô")

            markup.add(chill, view_the_city, benefit, back)

            bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—Ç–æ, –≥–¥–µ –í—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–≤–µ—Å—Ç–∏ –≤—Ä–µ–º—è:\n', reply_markup=markup)

        #–¥–æ—á–µ—Ä–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "–ö–∞–∫ –ø—Ä–æ–≤–µ—Å—Ç–∏ –≤—Ä–µ–º—è?"

        elif message.text == '–†–∞—Å—Å–ª–∞–±–∏—Ç—å—Å—è üòÆ‚Äçüí®':

            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

            hookah = types.KeyboardButton("–ö–∞–ª—å—è–Ω–Ω—ã–µ üò∂‚Äçüå´Ô∏è")
            anticafe = types.KeyboardButton("–ê–Ω—Ç–∏-–∫–∞—Ñ–µ ü•¥")
            nightclub = types.KeyboardButton("–ù–æ—á–Ω—ã–µ –∫–ª—É–±—ã üçì")
            karaoke = types.KeyboardButton("–ö–∞—Ä–∞–æ–∫–µ üé§")
            back = types.KeyboardButton("–ù–∞–∑–∞–¥ üîô")

            markup.add(hookah, anticafe, nightclub, karaoke, back)

            bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—Ç–æ, –≥–¥–µ –í—ã —Ö–æ—Ç–∏—Ç–µ —Ä–∞—Å—Å–ª–∞–±–∏—Ç—å—Å—è:", reply_markup=markup)

        elif message.text == '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≥–æ—Ä–æ–¥ üëÄ':

            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

            item43 = types.KeyboardButton("1Ô∏è‚É£ –ú–∞—Ä—à—Ä—É—Ç")
            item44 = types.KeyboardButton("2Ô∏è‚É£ –ú–∞—Ä—à—Ä—É—Ç")
            item45 = types.KeyboardButton("3Ô∏è‚É£ –ú–∞—Ä—à—Ä—É—Ç")
            back = types.KeyboardButton("–ù–∞–∑–∞–¥ üîô")

            markup.add(item43, item44, item45, back)

            bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—Ç–æ, –≥–¥–µ –í—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–≥—É–ª—è—Ç—å:", reply_markup=markup)

        #–í–µ—Ç–∫–∞ "–û—Ç–¥–æ—Ö–Ω—É—Ç—å —Å –ø–æ–ª—å–∑–æ–π"

        elif message.text == '–û—Ç–¥–æ—Ö–Ω—É—Ç—å —Å –ø–æ–ª—å–∑–æ–π ‚ò∫Ô∏è':

            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)

            physical_activities = types.KeyboardButton("–§–∏–∑–∏—á–µ—Å–∫–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ üí™")
            passive_activities = types.KeyboardButton("–ü–∞—Å—Å–∏–≤–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ üòâ")
            back = types.KeyboardButton("–ù–∞–∑–∞–¥ üîô")

            markup.add(physical_activities, passive_activities, back)

            bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—Ç–æ, –≥–¥–µ –í—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å —Å –ø–æ–ª—å–∑–æ–π:", reply_markup=markup)

        #–î–æ—á–µ—Ä–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "–û—Ç–¥–æ—Ö–Ω—É—Ç—å —Å –ø–æ–ª—å–∑–æ–π"

        elif message.text == '–§–∏–∑–∏—á–µ—Å–∫–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ üí™':

            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)

            billiards_bowling = types.KeyboardButton("–ë–∏–ª—å—è—Ä–¥, –±–æ—É–ª–∏–Ω–≥ üé≥")
            questroom = types.KeyboardButton("–ö–≤–µ—Å—Ç—ã üë£")
            horseride = types.KeyboardButton("–ö–æ–Ω–Ω—ã–µ –ø—Ä–æ–≥—É–ª–∫–∏ üê¥")
            paintball_karting = types.KeyboardButton("–ü–µ–π–Ω—Ç–±–æ–ª, –∫–∞—Ä—Ç–∏–Ω–≥ üèé")
            back = types.KeyboardButton("–ù–∞–∑–∞–¥ üîô")

            markup.add(billiards_bowling, questroom, horseride, paintball_karting, back)

            bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—Ç–æ:', reply_markup=markup)

        elif message.text == '–ü–∞—Å—Å–∏–≤–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ üòâ':

            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

            gameclub = types.KeyboardButton("–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ –∫–ª—É–±—ã üñ•")
            dekstop = types.KeyboardButton("–ù–∞—Å—Ç–æ–ª—å–Ω—ã–µ –∏–≥—Ä—ã üÉè")
            quizzes = types.KeyboardButton("–ö–≤–∏–∑—ã ‚ùî")
            back = types.KeyboardButton("–ù–∞–∑–∞–¥ üîô")

            markup.add(gameclub)
            markup.add(dekstop, quizzes)
            markup.add(back)

            bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—Ç–æ:', reply_markup=markup)

        #back button

        elif message.text == '–ù–∞–∑–∞–¥ üîô':

            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)

            food = types.KeyboardButton("–ì–¥–µ –ø–æ–µ—Å—Ç—å? üçú")
            spend_time = types.KeyboardButton("–ö–∞–∫ –ø—Ä–æ–≤–µ—Å—Ç–∏ –≤—Ä–µ–º—è? üëÄ")
            pay = types.KeyboardButton("–ü–ª–∞—Ç–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è üí∏")

            markup.add(food, spend_time, pay)

            bot.send_message(message.chat.id, '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üèö', reply_markup=markup)

        elif message.text == '–ù–∞–∑–∞–¥ ‚óÄÔ∏è':

            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)

            food = types.KeyboardButton("–ì–¥–µ –ø–æ–µ—Å—Ç—å? üçú")
            spend_time = types.KeyboardButton("–ö–∞–∫ –ø—Ä–æ–≤–µ—Å—Ç–∏ –≤—Ä–µ–º—è? üëÄ")
            pay = types.KeyboardButton("–ü–ª–∞—Ç–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è üíµ")

            markup.add(food, spend_time, pay)

            bot.send_message(message.chat.id, '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üèö', reply_markup=markup)

        #back button "–ú–∞—Ä—à—Ä—É—Ç –ø–æ –±–∞—Ä–∞–º"

        elif message.text == '–ù–∞–∑–∞–¥ –∫ –º–∞—Ä—à—Ä—É—Ç–∞–º üîô':

            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)

            lite_version = types.KeyboardButton("Lite –≤–µ—Ä—Å–∏—è")
            middle_version = types.KeyboardButton("Middle –≤–µ—Ä—Å–∏—è")
            hard_version = types.KeyboardButton("Hard –≤–µ—Ä—Å–∏—è")
            back = types.KeyboardButton("–ù–∞–∑–∞–¥ üîô")

            markup.add(lite_version, middle_version, hard_version, back)

            bot.send_message(message.chat.id, '–ú–∞—Ä—à—Ä—É—Ç –ø–æ –±–∞—Ä–∞–º', reply_markup=markup)

        # back button "–ú–∞—Ä—à—Ä—É—Ç –ø–æ –±–∞—Ä–∞–º" –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã

        elif message.text == '–ù–∞–∑–∞–¥ –∫ –º–∞—Ä—à—Ä—É—Ç–∞–º ‚óÄÔ∏è':

            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)

            lite_version = types.KeyboardButton("Lite –≤–µ—Ä—Å–∏—è")
            middle_version = types.KeyboardButton("Middle –≤–µ—Ä—Å–∏—è")
            hard_version = types.KeyboardButton("Hard –≤–µ—Ä—Å–∏—è")
            back = types.KeyboardButton("–ù–∞–∑–∞–¥ ‚óÄÔ∏è")

            markup.add(lite_version, middle_version, hard_version, back)

            bot.send_message(message.chat.id, '–ú–∞—Ä—à—Ä—É—Ç –ø–æ –±–∞—Ä–∞–º', reply_markup=markup)

        #–≤—ã–±–æ—Ä –∫—É—Ö–Ω–∏

        elif message.text == '–ê–∑–∏–∞—Ç—Å–∫–∞—è üç£':

            bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–≤–µ–¥–µ–Ω–∏—è —Å –∞–∑–∏–∞—Ç—Å–∫–æ–π –∫—É—Ö–Ω–µ–π, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ /asianfood')

        elif message.text == '–°—Ç–æ–ª–æ–≤—ã–µ üç≤':

            bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–æ–ª–æ–≤—ã–µ, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ /canteen')

        elif message.text == '–§–∞—Å—Ç—Ñ—É–¥—ã üçî':

            bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–≤–µ–¥–µ–Ω–∏—è —Å —Ñ–∞—Å—Ç—Ñ—É–¥–æ–º, –Ω–∞–∂–º–∏—Ç–µ /fastfood')

        elif message.text == '–°–ª–∞–≤—è–Ω—Å–∫–∞—è ü•ò':

            bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–≤–µ–¥–µ–Ω–∏—è —Å–æ —Å–ª–∞–≤—è–Ω—Å–∫–æ–π –∫—É—Ö–Ω–µ–π, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ /slavicfood')

        elif message.text == '–ú–æ—Ä—Å–∫–∞—è ü¶ê':

            bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–≤–µ–¥–µ–Ω–∏—è —Å –º–æ—Ä—Å–∫–æ–π –∫—É—Ö–Ω–µ–π, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ /seafood')

        elif message.text == '–ö–≤–µ—Å—Ç—ã üë£':

            bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–≤–∏–∑—ã, –Ω–∞–∂–º–∏—Ç–µ /questroom')

        elif message.text == '–ù–æ—á–Ω—ã–µ –∫–ª—É–±—ã üçì':

            bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–æ—á–Ω—ã–µ –∫–ª—É–±—ã, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ /nightclub')

        elif message.text == '–ò—Ç–∞–ª—å—è–Ω—Å–∫–∞—è üçï':

            bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–≤–µ–¥–µ–Ω–∏—è —Å –∏—Ç–∞–ª—å—è–Ω—Å–∫–æ–π –∫—É—Ö–Ω–µ–π, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ /italianfood')

        elif message.text == '–ì—Ä—É–∑–∏–Ω—Å–∫–∞—è ü•ô':

            bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–≤–µ–¥–µ–Ω–∏—è —Å –≥—Ä—É–∑–∏–Ω—Å–∫–æ–π –∫—É—Ö–Ω–µ–π, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ /georgianfood')

        elif message.text == '–ö–∞—Ä–∞–æ–∫–µ üé§':

            bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–µ—Å—Ç–∞ —Å –∫–∞—Ä–∞–æ–∫–µ, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ /karaoke')

        elif message.text == '–ê–Ω—Ç–∏-–∫–∞—Ñ–µ ü•¥':

            bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞–Ω—Ç–∏-–∫–∞—Ñ–µ, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ /anticafe')

        elif message.text == '–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ –∫–ª—É–±—ã üñ•':

            bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ –∫–ª—É–±—ã, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ /gameclub')

        elif message.text == '–ü–µ–π–Ω—Ç–±–æ–ª, –∫–∞—Ä—Ç–∏–Ω–≥ üèé':

            bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–µ—Å—Ç–∞ —Å –ø–µ–π–Ω—Ç–±–æ–ª–æ–º –∏ –∫–∞—Ä—Ç–∏–Ω–≥–æ–º, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ /paintball_karting')

        elif message.text == '–ö–æ–Ω–Ω—ã–µ –ø—Ä–æ–≥—É–ª–∫–∏ üê¥':

            bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã –ø—Ä–æ–≥—É–ª—è—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—è—Ö, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ /horseride')

        elif message.text == '–ö–∞–ª—å—è–Ω–Ω—ã–µ üò∂‚Äçüå´Ô∏è':

            bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞–ª—å—è–Ω–Ω—ã–µ, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ /lounge_bar')

        elif message.text == '–ë–∏–ª—å—è—Ä–¥, –±–æ—É–ª–∏–Ω–≥ üé≥':

            bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã –ø–æ–∏–≥—Ä–∞—Ç—å –≤ –±–∏–ª—å—è—Ä–¥ –∏–ª–∏ –±–æ—É–ª–∏–Ω–≥, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ /pool')

        elif message.text == '–ö–≤–∏–∑—ã ‚ùî':

            bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã –ø–æ–∏–≥—Ä–∞—Ç—å –≤ –∫–≤–∏–∑—ã, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ /kvizi')

        elif message.text == '–ë–∞—Ä—ã –∏ –ø–∞–±—ã üç∏':

            bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã —Å—Ö–æ–¥–∏—Ç—å –≤ –±–∞—Ä—ã –∏–ª–∏ –ø–∞–±—ã, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ /bar_pub')

        elif message.text == '–ù–∞—Å—Ç–æ–ª—å–Ω—ã–µ –∏–≥—Ä—ã üÉè':

            bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã –ø–æ–∏–≥—Ä–∞—Ç—å –≤ –Ω–∞—Å—Ç–æ–ª—å–Ω—ã–µ –∏–≥—Ä—ã, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ /table_games')

        elif message.text == '–ö–æ–Ω–¥–∏—Ç–µ—Ä—Å–∫–∏–µ üç¨':

            bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–Ω–¥–∏—Ç–µ—Ä—Å–∫–∏–µ, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ /pastry_shops')

        elif message.text == '1Ô∏è‚É£ –ú–∞—Ä—à—Ä—É—Ç':

            bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–µ—Ä–≤—ã–π –º–∞—Ä—à—Ä—É—Ç, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ /route_1')

        elif message.text == '2Ô∏è‚É£ –ú–∞—Ä—à—Ä—É—Ç':

            bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Ç–æ—Ä–æ–π –º–∞—Ä—à—Ä—É—Ç, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ /route_2')

        elif message.text == '3Ô∏è‚É£ –ú–∞—Ä—à—Ä—É—Ç':

            bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç—Ä–µ—Ç–∏–π –º–∞—Ä—à—Ä—É—Ç, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ /route_3')

        elif message.text == '–ú–∞—Ä—à—Ä—É—Ç 1Ô∏è‚É£':

            bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–µ—Ä–≤—ã–π –∏–Ω—Å—Ç–∞–º–∞—Ä—à—Ä—É—Ç, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ /foto_1')

        elif message.text == '–ú–∞—Ä—à—Ä—É—Ç 2Ô∏è‚É£':

            bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Ç–æ—Ä–æ–π –∏–Ω—Å—Ç–∞–º–∞—Ä—à—Ä—É—Ç, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ /foto_2')

        #–ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è:

        elif message.text == '–ú–∞–≥–∞–¥–∞–Ω':

            markup = types.InlineKeyboardMarkup(row_width=2)

            vk = types.InlineKeyboardButton("VK", url='https://vk.com/magadanrnd', callback_data='vkvk')
            site = types.InlineKeyboardButton("–°—Å—ã–ª–∫–∞ –Ω–∞ —Å–∞–π—Ç", url='https://magadanrnd.ru', callback_data='m')
            ya_maps = types.InlineKeyboardButton("–°—Å—ã–ª–∫–∞ –Ω–∞ –Ø.–ö–∞—Ä—Ç—ã", url='https://yandex.ru/maps/org/magadan/231267455827/?ll=39.752415%2C47.240329&z=12.96', callback_data='p')

            photo = open('photo_bot/magadan.png', 'rb')

            markup.add(site, ya_maps, vk)

            text = "*–ú–∞–≥–∞–¥–∞–Ω*\n\n"\
                   "üçΩÔ∏è –†–µ—Å—Ç–æ—Ä–∞–Ω –µ–≤—Ä–æ–ø–µ–π—Å–∫–æ–π –∫—É—Ö–Ω–∏\n" \
                   "üíµ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: 2400 ‚ÇΩ\n"\
                   "‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: 4.8\n" \
                   "‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: +7 (928) 111-18-77\n\n"\
                   "–ú–µ–Ω—é —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ –≤–∫–ª—é—á–∞–µ—Ç: –º–∞–≥–∞–¥–∞–Ω—Å–∫–∏–µ –∫—Ä–∞–±—ã –∏ –∫—Ä–µ–≤–µ—Ç–∫–∏, —Å–∞—Ö–∞–ª–∏–Ω—Å–∫–∏–µ –º–æ—Ä—Å–∫–∏–µ –µ–∂–∏ –∏ –≥—Ä–µ–±–µ—à–∫–∏, —á–µ—Ä–Ω–æ–º–æ—Ä—Å–∫–∞—è –±–∞—Ä–∞–±—É–ª—è –∏ —Ä–∞–ø–∞–Ω—ã –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ! –ö–∞—á–µ—Å—Ç–≤–æ –±–ª—é–¥ –∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –∫–∞–∂–¥–æ–º—É –∫–ª–∏–µ–Ω—Ç—É –≤–∞—Å –ø—Ä–∏—è—Ç–Ω–æ —É–¥–∏–≤—è—Ç!"

            bot.send_photo(message.chat.id, photo, caption=text, reply_markup=markup, parse_mode='Markdown')

        elif message.text == '–ù–∏—á—ë –•–∞—Ä—á–æ!':

            markup = types.InlineKeyboardMarkup(row_width=2)

            ya_maps = types.InlineKeyboardButton("–°—Å—ã–ª–∫–∞ –Ω–∞ –Ø.–ö–∞—Ä—Ç—ã", url='https://yandex.ru/maps/-/CCU0VSrVCD', callback='d')

            photo = open('photo_bot/niche.jpg', 'rb')

            markup.add(ya_maps)

            text = "*–ù–∏—á—ë –•–∞—Ä—á–æ!*\n\n"\
                   "üçΩÔ∏è –ì—Ä—É–∑–∏–Ω—Å–∫–∞—è –∑–∞–∫—É—Å–æ—á–Ω–∞—è\n" \
                   "üíµ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: 400 ‚ÇΩ\n"\
                   "‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: 4.3\n" \
                   "‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: +7 (950) 853-21-98\n\n" \
                   "–ú–µ–Ω—é –±–∏—Å—Ç—Ä–æ –≤–∫–ª—é—á–∞–µ—Ç: —Ö–∏–Ω–∫–∞–ª–∏, —Ö–∞—á–∞–ø—É—Ä–∏, –ø—Ö–∞–ª–∏, —á–µ–±—É—Ä–µ–∫–∏, –ø—É—Ä–∏, —Å—É–ø—ã –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ! –õ—é–±–∏–º—ã–µ –±–ª—é–¥–∞ –ø–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º —Ü–µ–Ω–∞–º, –∫—Ä–∞—Å–∏–≤—ã–π –∏–Ω—Ç–µ—Ä—å–µ—Ä, –∫–∞–≤–∫–∞–∑—Å–∫–æ–µ –≥–æ—Å—Ç–µ–ø—Ä–∏–∏–º—Å—Ç–≤–æ –∏ —É–¥–æ–±–Ω–æ–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –≤ —Ü–µ–Ω—Ç—Ä–µ –≤–∞—Å –Ω–µ –æ—Å—Ç–∞–≤—è—Ç —Ä–∞–≤–Ω–æ–¥—É—à–Ω—ã–º!"

            bot.send_photo(message.chat.id, photo, caption=text, reply_markup=markup, parse_mode='Markdown')

        elif message.text == '–≠—Ä—Ç–∏':

            markup = types.InlineKeyboardMarkup(row_width=2)

            ya_maps = types.InlineKeyboardButton("–°—Å—ã–ª–∫–∞ –Ω–∞ –Ø.–ö–∞—Ä—Ç—ã", url='https://yandex.ru/maps/-/CCU0V0G8lC', callback_data='u')
            site = types.InlineKeyboardButton("–°—Å—ã–ª–∫–∞ –Ω–∞ —Å–∞–π—Ç", url='https://ertirestaurant.ru/', callback_data='t')
            social = types.InlineKeyboardButton("–°–æ—Ü—Å–µ—Ç–∏", url='https://t.me/ertirest', callback_data='tg')
            menu = types.InlineKeyboardButton("–ú–µ–Ω—é", url='https://drive.google.com/file/d/1IcGjqxN1icVnVem2dgBGU9i2vTfawgsC/preview')

            photo = open('photo_bot/erti.jpg', 'rb')

            markup.add(ya_maps, social, menu, site)

            text = "*–≠—Ä—Ç–∏*\n\n" \
                   "üçΩÔ∏è –†–µ—Å—Ç–æ—Ä–∞–Ω –≥—Ä—É–∑–∏–Ω—Å–∫–æ–π –∫—É—Ö–Ω–∏\n" \
                   "üíµ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: 1300 ‚ÇΩ\n" \
                   "‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: 5.0\n" \
                   "‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: +7 (938) 158-58-58\n\n" \
                   "–≠—Ä—Ç–∏ - —ç—Ç–æ –º–µ—Å—Ç–æ, –≥–¥–µ —Å–æ—á–µ—Ç–∞—é—Ç—Å—è –¥—Ä–µ–≤–Ω–∏–µ –≥—Ä—É–∑–∏–Ω—Å–∫–∏–µ —Ç—Ä–∞–¥–∏—Ü–∏–∏ –∏ —Å–≤–µ–∂–∏–µ –≤–µ—è–Ω–∏—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏. –ò–Ω—Ç–µ—Ä—å–µ—Ä –∑–∞–≤–µ–¥–µ–Ω–∏—è —Å–æ—á–µ—Ç–∞–µ—Ç –≤ —Å–µ–±–µ —Å—Ç–∏–ª—å–Ω—ã–π –ª–æ—Ñ—Ç –∏ –∫–æ–ª–æ—Ä–∏—Ç–Ω—É—é —ç—Ç–Ω–∏–∫—É. –ó–¥–µ—Å—å –µ—Å—Ç—å –≤—Å–µ, —á—Ç–æ–±—ã –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ –≤–∞—Å –≤ –∂–∏–≤–æ–ø–∏—Å–Ω—ã–µ –ø—Ä–æ—Å—Ç–æ—Ä—ã –ì—Ä—É–∑–∏–∏: –∞–¥–∂–∞–ø—Å–∞–Ω–¥–∞–ª, —á–∞–∫–≤–∞–≤–∏–ª–∏, —Ö–∞—á–∞–ø—É—Ä–∏, —Ö–µ–Ω–∫–∞–ª–∏ –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ!"

            bot.send_photo(message.chat.id, photo, caption=text, reply_markup=markup, parse_mode='Markdown')

        elif message.text == 'Sumo Sam':

            markup = types.InlineKeyboardMarkup(row_width=1)

            ya_maps1 = types.InlineKeyboardButton('–°—Å—ã–ª–∫–∞ –Ω–∞ –Ø.–ö–∞—Ä—Ç—ã', url='https://clck.ru/34ciWP', callback_data='qwe')

            photo = open('photo_bot/sumasam.jpg', 'rb')

            markup.add(ya_maps1)

            text = "*Sumo Sam*\n\n" \
                   "üçΩÔ∏è –ê–∑–∏–∞—Ç—Å–∫–æ–µ –±–∏—Å—Ç—Ä–æ\n" \
                   "üíµ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: 600 ‚ÇΩ\n" \
                   "‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: 4.4\n" \
                   "‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: +7 (918) 594-43-55\n\n" \
                   "Sumo Sam - –∞–∑–∏–∞—Ç—Å–∫–æ–µ –±–∏—Å—Ç—Ä–æ –≤ —Ü–µ–Ω—Ç—Ä–µ –≥–æ—Ä–æ–¥–∞. –ó–¥–µ—Å—å –≤—ã —Å–º–æ–∂–µ—Ç–µ –Ω–∞—Å–ª–∞–¥–∏—Ç—å—Å—è —Ç–∞–∫–∏–º–∏ –±–ª—é–¥–∞–º–∏ –∞–∑–∏–∞—Ç—Å–∫–æ–π –∫—É—Ö–Ω–∏, –∫–∞–∫: —Å—É—à–∏—Ä–∏—Ç–æ, —Ç–æ–º —è–º, –ø–æ–∫–µ, –≤–∞–≥–∞—Å–∏ –º–æ—Ç–∏ –∏ –¥—Ä. –ê –ø—Ä–∏–≤–µ—Ç–ª–∏–≤—ã–π –ø–µ—Ä—Å–æ–Ω–∞–ª –∏ —Å—Ç–∏–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä—å–µ—Ä —Å–æ–∑–¥–∞–¥—É—Ç –¥–ª—è –≤–∞—Å –∞—Ç–º–æ—Å—Ñ–µ—Ä—É —É—é—Ç–∞."

            bot.send_photo(message.chat.id, photo, caption=text, reply_markup=markup, parse_mode='Markdown')

        elif message.text == '–ö–æ—Ä–æ–≤–∞':

            markup = types.InlineKeyboardMarkup(row_width=2)

            ya_maps = types.InlineKeyboardButton('–°—Å—ã–ª–∫–∞ –Ω–∞ –Ø.–ö–∞—Ä—Ç—ã', url='https://yandex.ru/maps/-/CCU0V0h61A', callback_data='qwgse')
            site = types.InlineKeyboardButton('–°—Å—ã–ª–∫–∞ –Ω–∞ —Å–∞–π—Ç', url='https://cowbar.ru/', callback_data='dlssfddddgl')
            menu = types.InlineKeyboardButton('–ú–µ–Ω—é', url='https://drive.google.com/file/d/1Bzf35QlAfTdgvxLV6tcdg6dMQCC6wtgi/view')

            photo = open('photo_bot/cow.jpg', 'rb')

            markup.add(ya_maps, menu, site)

            text = "*Cow Bar & Restaurant | –†–µ—Å—Ç–æ—Ä–∞–Ω –ö–æ—Ä–æ–≤–∞*\n\n" \
                   "üçΩÔ∏è –°—Ç–µ–π–∫-—Ö–∞—É—Å\n" \
                   "üíµ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: 2300 ‚ÇΩ\n" \
                   "‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: 5.0\n" \
                   "‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: +7 (863) 221-12-95\n\n" \
                   "–†–µ—Å—Ç–æ—Ä–∞–Ω —Å –º—è—Å–æ–º –Ω–∞ –æ—Ç–∫—Ä—ã—Ç–æ–º –æ–≥–Ω–µ –∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π –∫–æ–ø—Ç–∏–ª—å–Ω–µ–π. –ï–≥–æ –º–µ–Ω—é –≤–∫–ª—é—á–∞–µ—Ç: —Å—Ç–µ–π–∫–∏, –±—É—Ä–≥–µ—Ä—ã, –∫—Ä—ã–ª—ã—à–∫–∏, —Ä–µ–±—Ä–∞ –∏ –¥—Ä—É–≥–∏–µ –º—è—Å–Ω—ã–µ –¥–µ–ª–∏–∫–∞—Ç–µ—Å—ã. –í–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–ª, —Å—Ç–∏–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä—å–µ—Ä, –±—ã—Å—Ç—Ä–∞—è –ø–æ–¥–∞—á–∞, —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–π –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç –±–ª—é–¥ –∏ –Ω–∞–ø–∏—Ç–∫–æ–≤ - –≤—Å–µ —ç—Ç–æ –±–ª–∞–≥–æ–ø—Ä–∏—è—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏—é —Ç–æ–ª—å–∫–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö —ç–º–æ—Ü–∏–π!"

            bot.send_photo(message.chat.id, photo, caption=text, reply_markup=markup, parse_mode='Markdown')

        elif message.text == '–°—ã—Ä–æ–≤–∞—Ä–Ω—è':

            markup = types.InlineKeyboardMarkup(row_width=2)

            ya_maps = types.InlineKeyboardButton('–°—Å—ã–ª–∫–∞ –Ω–∞ –Ø.–ö–∞—Ä—Ç—ã', url='https://yandex.ru/maps/org/syrovarnya/208795372921/?ll=39.733397%2C47.225571&z=16.75', callback_data='qdsgwe')
            site = types.InlineKeyboardButton('–°—Å—ã–ª–∫–∞ –Ω–∞ —Å–∞–π—Ç', url='https://www.syrovarnya.com/syrovarnya-rostov-na-donu', callback_data='dlsdgdsl')
            menu = types.InlineKeyboardButton('–ú–µ–Ω—é', url='https://www.novikovgroup.ru/upload/iblock/eed/31k4krp2lw67eddxi1tinbe09u0x2lew.pdf')

            photo = open('photo_bot/sirovarnya.jpg', 'rb')

            markup.add(ya_maps, menu, site)

            text = "*–°—ã—Ä–æ–≤–∞—Ä–Ω—è*\n\n" \
                   "üçΩÔ∏è –†–µ—Å—Ç–æ—Ä–∞–Ω –∏—Ç–∞–ª—å—è–Ω—Å–∫–æ–π –∫—É—Ö–Ω–∏\n" \
                   "üíµ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: 2000 ‚ÇΩ\n" \
                   "‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: 5.0\n" \
                   "‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: +7 (988) 549-37-64\n\n" \
                   "–≠—Ç–æ —Å–µ–º–µ–π–Ω—ã–π —Ä–µ—Å—Ç–æ—Ä–∞–Ω, —Å –¥–æ–º–∞—à–Ω–µ–π –∏—Ç–∞–ª—å—è–Ω—Å–∫–æ–π –∫—É—Ö–Ω–µ–π, –ø—Ä–∏—è—Ç–Ω–æ–π –∞—Ç–º–æ—Å—Ñ–µ—Ä–æ–π –∏ –¥—É—à–µ–≤–Ω—ã–º —Å–µ—Ä–≤–∏—Å–æ–º. –ú–µ–Ω—é –ø–æ—Å—Ç—Ä–æ–µ–Ω–æ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –Ω–∞ —Å—ã—Ä–∞—Ö —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞, –∑–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–º —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ—Ç–æ—Ä—ã—Ö –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–Ω–∞–±–ª—é–¥–∞—Ç—å. –õ–æ–∫–∞—Ü–∏—è, –∏–Ω—Ç–µ—Ä—å–µ—Ä, –ø–µ—Ä—Å–æ–Ω–∞–ª, –±–ª—é–¥–∞ - –≤—Å–µ –Ω–∞ –≤—ã—Å—à–µ–º —É—Ä–æ–≤–Ω–µ!"

            bot.send_photo(message.chat.id, photo, caption=text, reply_markup=markup, parse_mode='Markdown')

        #–º–∞—Ä—à—Ä—É—Ç –ø–æ –±–∞—Ä–∞–º

        elif message.text == '–ú–∞—Ä—à—Ä—É—Ç –ø–æ –±–∞—Ä–∞–º üçπüö∂':

            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)

            lite_version = types.KeyboardButton('Lite –≤–µ—Ä—Å–∏—è')
            middle_version = types.KeyboardButton('Middle –≤–µ—Ä—Å–∏—è')
            hard_version = types.KeyboardButton('Hard –≤–µ—Ä—Å–∏—è')
            back = types.KeyboardButton('–ù–∞–∑–∞–¥ ‚óÄÔ∏è')

            markup.add(lite_version, middle_version, hard_version, back)

            bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∂–µ–ª–∞–µ–º—ã–π —É—Ä–æ–≤–µ–Ω—å –≤–µ—Å–µ–ª—å—èüòú:', reply_markup=markup)

        elif message.text == 'Lite –≤–µ—Ä—Å–∏—è':

            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)

            L_eco = types.KeyboardButton('Lite\nüí∏')
            L_middle = types.KeyboardButton('Lite\nüí∏üí∏')
            L_premium = types.KeyboardButton('Lite\nüí∏üí∏üí∏')
            back = types.KeyboardButton('–ù–∞–∑–∞–¥ –∫ –º–∞—Ä—à—Ä—É—Ç–∞–º ‚óÄÔ∏è')

            markup.add(L_eco, L_middle, L_premium, back)

            bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –í–∞—à —Ü–µ–Ω–æ–≤–æ–π —Å–µ–≥–º–µ–Ω—Ç:', reply_markup=markup)

        elif message.text == 'Middle –≤–µ—Ä—Å–∏—è':

            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)

            M_eco = types.KeyboardButton('Middle\nüí∏')
            M_middle = types.KeyboardButton('Middle\nüí∏üí∏')
            M_premium = types.KeyboardButton('Middle\nüí∏üí∏üí∏')
            back = types.KeyboardButton('–ù–∞–∑–∞–¥ –∫ –º–∞—Ä—à—Ä—É—Ç–∞–º ‚óÄÔ∏è')

            markup.add(M_eco, M_middle, M_premium, back)

            bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –í–∞—à —Ü–µ–Ω–æ–≤–æ–π —Å–µ–≥–º–µ–Ω—Ç:', reply_markup=markup)

        elif message.text == 'Hard –≤–µ—Ä—Å–∏—è':

            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)

            H_eco = types.KeyboardButton('Hard\nüí∏')
            H_middle = types.KeyboardButton('Hard\nüí∏üí∏')
            H_premium = types.KeyboardButton('Hard\nüí∏üí∏üí∏')
            back = types.KeyboardButton('–ù–∞–∑–∞–¥ –∫ –º–∞—Ä—à—Ä—É—Ç–∞–º ‚óÄÔ∏è')

            markup.add(H_eco, H_middle, H_premium, back)

            bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –í–∞—à —Ü–µ–Ω–æ–≤–æ–π —Å–µ–≥–º–µ–Ω—Ç:', reply_markup=markup)

        elif message.text == 'Lite\nüí∏':

            markup = types.InlineKeyboardMarkup(row_width=1)

            ya_maps = types.InlineKeyboardButton('–°—Å—ã–ª–∫–∞ –Ω–∞ –º–∞—Ä—à—Ä—É—Ç –≤ –Ø.–ö–∞—Ä—Ç–∞—Ö', url='https://clck.ru/34ZPhF', callback_data='qdsgwe')

            photo = open('photo_bot/wine.jpg', 'rb')

            markup.add(ya_maps)

            text = "1Ô∏è‚É£ *Abbey Road Pub*\n" \
                   "üçΩÔ∏è –ê–Ω–≥–ª–∏–π—Å–∫–∏–π –ü–∞–±\n" \
                   "‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: 4,7\n\n" \
                   "–ß—Ç–æ –≤—ã–ø–∏—Ç—å‚ùì\n" \
                   "‚óªÔ∏è –ü–∏–≤–æ Corona - 250‚ÇΩ\n" \
                   "‚óªÔ∏è –ë–∏—Ç—Ç–µ—Ä Aperol - 225‚ÇΩ\n\n" \
                   "2Ô∏è‚É£ *–ë–∞–≥–¥–∞–¥ mint*\n" \
                   "üçΩÔ∏è –ö–∞–ª—å—è–Ω-–±–∞—Ä\n" \
                   "‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: 4,4\n\n" \
                   "–ß—Ç–æ –≤—ã–ø–∏—Ç—å‚ùì\n" \
                   "‚óªÔ∏è –ü–∞–ª–æ–º–∞ - 440‚ÇΩ\n" \
                   "‚óªÔ∏è –î–µ–≤—É—à–∫–∞ –∏–∑ –≤—ã—Å—à–µ–≥–æ –æ–±—â–µ—Å—Ç–≤–∞ - 380‚ÇΩ"

            bot.send_photo(message.chat.id, photo, caption=text, reply_markup=markup, parse_mode='Markdown')
            bot.delete_message(message.chat.id, message.message_id)

        elif message.text == 'Lite\nüí∏üí∏':

            markup = types.InlineKeyboardMarkup(row_width=1)

            ya_maps = types.InlineKeyboardButton('–°—Å—ã–ª–∫–∞ –Ω–∞ –º–∞—Ä—à—Ä—É—Ç –≤ –Ø.–ö–∞—Ä—Ç–∞—Ö', url='https://clck.ru/34ZPbi', callback_data='qdsgwe')

            photo = open('photo_bot/wine.jpg', 'rb')

            markup.add(ya_maps)

            text = "1Ô∏è‚É£ *London Pub*\n" \
                   "üçΩÔ∏è –ü–∞–±\n" \
                   "‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: 4,8\n\n" \
                   "–ß—Ç–æ –≤—ã–ø–∏—Ç—å‚ùì\n" \
                   "‚óªÔ∏è London Cider - 230‚ÇΩ\n" \
                   "‚óªÔ∏è –ú—É–Ω–¥–∏—Ä –ó–æ–ª–æ—Ç–æ–π - 230‚ÇΩ\n\n" \
                   "2Ô∏è‚É£ *–°–≤–æ–π –±–∞—Ä*\n" \
                   "üçΩÔ∏è –ë–∞—Ä\n" \
                   "‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: 5,0\n\n" \
                   "–ß—Ç–æ –≤—ã–ø–∏—Ç—å‚ùì\n" \
                   "‚óªÔ∏è –í–µ–∂–ª–∏–≤—ã–π —Ä—É—Å—Å–∫–∏–π - 500‚ÇΩ\n" \
                   "‚óªÔ∏è Hustler - 500‚ÇΩ\n" \
                   "‚óªÔ∏è Aviation - 500‚ÇΩ"

            bot.send_photo(message.chat.id, photo, caption=text, reply_markup=markup, parse_mode='Markdown')
            bot.delete_message(message.chat.id, message.message_id)

        elif message.text == 'Lite\nüí∏üí∏üí∏':

            markup = types.InlineKeyboardMarkup(row_width=1)

            ya_maps = types.InlineKeyboardButton('–°—Å—ã–ª–∫–∞ –Ω–∞ –º–∞—Ä—à—Ä—É—Ç –≤ –Ø.–ö–∞—Ä—Ç–∞—Ö', url='https://clck.ru/34ZPcD', callback_data='qdsgwe')

            photo = open('photo_bot/wine.jpg', 'rb')

            markup.add(ya_maps)

            text = "1Ô∏è‚É£ *–†—é–º–æ—á–Ω–∞—è —Ö—Ä—É—Å—Ç–∞–ª—å*\n" \
                   "üçΩÔ∏è –ë–∞—Ä\n" \
                   "‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: 4,9\n\n" \
                   "–ß—Ç–æ –≤—ã–ø–∏—Ç—å‚ùì\n" \
                   "‚óªÔ∏è –ë–µ–ª—ã–π —Ä—É—Å—Å–∫–∏–π - 400‚ÇΩ\n" \
                   "‚óªÔ∏è –ö–ª—É–±–Ω–∏—á–∫–∞ 18+ - 150‚ÇΩ\n" \
                   "‚óªÔ∏è –§–∏–µ—Ä–æ —Ç–æ–ª–∏–∫ - 400‚ÇΩ\n\n" \
                   "2Ô∏è‚É£ *–ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ –∫—É–ª—å—Ç—É—Ä—ã*\n" \
                   "üé§ –ö–∞—Ä–∞–æ–∫–µ-–∫–ª—É–±\n" \
                   "‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: 4,4\n\n" \
                   "–ß—Ç–æ –≤—ã–ø–∏—Ç—å‚ùì\n" \
                   "‚óªÔ∏è Citron highball - 680‚ÇΩ\n" \
                   "‚óªÔ∏è Mandarin sour - 680‚ÇΩ" \

            bot.send_photo(message.chat.id, photo, caption=text, reply_markup=markup, parse_mode='Markdown')
            bot.delete_message(message.chat.id, message.message_id)

        elif message.text == 'Middle\nüí∏':

            markup = types.InlineKeyboardMarkup(row_width=1)

            ya_maps = types.InlineKeyboardButton('–°—Å—ã–ª–∫–∞ –Ω–∞ –º–∞—Ä—à—Ä—É—Ç –≤ –Ø.–ö–∞—Ä—Ç–∞—Ö', url='https://clck.ru/34ZPcx', callback_data='qdsgwe')

            photo = open('photo_bot/wine.jpg', 'rb')

            markup.add(ya_maps)

            text = "1Ô∏è‚É£ *–ú–æ–π—à–µ*\n" \
                   "üçΩÔ∏è –ë–∞—Ä\n" \
                   "‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: 4,9\n\n" \
                   "–ß—Ç–æ –≤—ã–ø–∏—Ç—å‚ùì\n" \
                   "‚óªÔ∏è –¢—ã–∫–≤–∞ –Ω–∞ —Ç–µ–∫–∏–ª–µ - 180‚ÇΩ\n" \
                   "‚óªÔ∏è –û—Ä–µ—Ö –Ω–∞ –¥—É–±–µ –≤–∏—Å–∫–∏ - 180‚ÇΩ\n" \
                   "‚óªÔ∏è –ö–æ—Ñ–µ –∏ –±–∞–Ω–∞–Ω –Ω–∞ –≤–æ–¥–∫–µ - 180‚ÇΩ\n\n" \
                   "2Ô∏è‚É£ *–í–¥–æ—Ö –í—ã–¥–æ—Ö*\n" \
                   "üí® –ö–∞–ª—å—è–Ω–Ω–∞—è \n" \
                   "‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: 4,4\n\n" \
                   "–ß—Ç–æ –≤—ã–ø–∏—Ç—å‚ùì\n" \
                   "‚óªÔ∏è –°–∏–¥—Ä - 200‚ÇΩ\n" \
                   "–ö–∞–ª—å—è–Ω ‚ùìÔ∏è\n" \
                   "‚óªÔ∏è –ö–∞–ª—å—è–Ω - 900‚ÇΩ" \

            bot.send_photo(message.chat.id, photo, caption=text, reply_markup=markup, parse_mode='Markdown')
            bot.delete_message(message.chat.id, message.message_id)

        elif message.text == 'Middle\nüí∏üí∏':

            markup = types.InlineKeyboardMarkup(row_width=1)

            ya_maps = types.InlineKeyboardButton('–°—Å—ã–ª–∫–∞ –Ω–∞ –º–∞—Ä—à—Ä—É—Ç –≤ –Ø.–ö–∞—Ä—Ç–∞—Ö',
                                                url='https://clck.ru/34ZPe8',
                                                callback_data='qdsgwe')

            photo = open('photo_bot/wine.jpg', 'rb')

            markup.add(ya_maps)

            text = "1Ô∏è‚É£ *Ludovic*\n" \
                   "üé§ –ö–∞—Ä–∞–æ–∫–µ\n" \
                   "‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: 4,6\n\n" \
                   "–ß—Ç–æ –≤—ã–ø–∏—Ç—å‚ùì\n" \
                   "‚óªÔ∏è –ë–æ–º–±–µ–π –ë—Ä–∞–º–±–ª - 550‚ÇΩ\n" \
                   "‚óªÔ∏è Martini fiero - 900‚ÇΩ\n\n" \
                   "2Ô∏è‚É£ *–ú—ë–¥*\n" \
                   "ü™© –ù–æ—á–Ω–æ–π –∫–ª—É–±\n" \
                   "‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: 4,3\n\n" \
                   "–ß—Ç–æ –≤—ã–ø–∏—Ç—å‚ùì\n" \
                   "‚óªÔ∏è –ú—É—Ö–∞ –≤ –°–∞–º–±—É–∫–µ - 350‚ÇΩ\n" \
                   "Ô∏è‚óªÔ∏è –ì–æ–ª—É–±–∞—è –ª–∞–≥—É–Ω–∞ - 290‚ÇΩ\n" \

            bot.send_photo(message.chat.id, photo, caption=text, reply_markup=markup, parse_mode='Markdown')
            bot.delete_message(message.chat.id, message.message_id)

        elif message.text == 'Middle\nüí∏üí∏üí∏':

            markup = types.InlineKeyboardMarkup(row_width=1)

            ya_maps = types.InlineKeyboardButton('–°—Å—ã–ª–∫–∞ –Ω–∞ –º–∞—Ä—à—Ä—É—Ç –≤ –Ø.–ö–∞—Ä—Ç–∞—Ö',
                                                url='https://clck.ru/34ZPeq',
                                                callback_data='qdsgwe')

            photo = open('photo_bot/wine.jpg', 'rb')

            markup.add(ya_maps)

            text = "1Ô∏è‚É£ *–≠–º–±–∞—Ä–≥–æ*\n" \
                   "üçΩÔ∏è –ë–∞—Ä\n" \
                   "‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: 4,8\n\n" \
                   "–ß—Ç–æ –≤—ã–ø–∏—Ç—å‚ùì\n" \
                   "‚óªÔ∏è E-ON Black Power&Tundra Authentic - 550‚ÇΩ\n" \
                   "‚óªÔ∏è E-ON Danger Berry&Gin - 750‚ÇΩ\n" \
                   "‚óªÔ∏è E-ON Danger Berry&Gin - 750‚ÇΩ\n\n" \
                   "2Ô∏è‚É£ *–ë29*\n" \
                   "‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: 4,8 \n" \
                   "üçΩÔ∏è –ë–∞—Ä\n\n" \
                   "–ß—Ç–æ –≤—ã–ø–∏—Ç—å‚ùì\n" \
                   "‚óªÔ∏è –•–∏—Ä–æ—Å–∏–º–∞ - 350‚ÇΩ\n" \
                   "‚óªÔ∏è –ó–µ–ª–µ–Ω–∞—è –§–µ—è - 700‚ÇΩ\n" \
                   "‚óªÔ∏è –ê–ø–µ—Ä–æ–ª—å —à–ø—Ä–∏—Ü - 550‚ÇΩ" \

            bot.send_photo(message.chat.id, photo, caption=text, reply_markup=markup, parse_mode='Markdown')
            bot.delete_message(message.chat.id, message.message_id)

        elif message.text == 'Hard\nüí∏':

            markup = types.InlineKeyboardMarkup(row_width=1)

            ya_maps = types.InlineKeyboardButton('–°—Å—ã–ª–∫–∞ –Ω–∞ –º–∞—Ä—à—Ä—É—Ç –≤ –Ø.–ö–∞—Ä—Ç–∞—Ö',
                                                url='https://clck.ru/34ZPfR',
                                                callback_data='qdsgwe')

            photo = open('photo_bot/wine.jpg', 'rb')

            markup.add(ya_maps)

            text = "1Ô∏è‚É£ *–ü—É–Ω—à*\n" \
                   "ü™© –ö–ª—É–±\n" \
                   "‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: 3,2\n\n" \
                   "–ß—Ç–æ –≤—ã–ø–∏—Ç—å‚ùì\n" \
                   "‚óªÔ∏è –î–∂–æ–∫–µ—Ä - 400‚ÇΩ\n" \
                   "‚óªÔ∏è –ö—É–∫–∞—Ä–∞—á–∞ - 250‚ÇΩ\n" \
                   "‚óªÔ∏è –ë-25 - 250‚ÇΩ\n" \
                   "‚óªÔ∏è –í–æ–¥–∫–∞ —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫ - 200‚ÇΩ\n\n" \
                   "2Ô∏è‚É£ *–ö–≤–∞–¥—Ä–∞—Ç*\n" \
                   "üçΩÔ∏è –ë–∞—Ä\n" \
                   "‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: 5,0\n\n" \
                   "–ß—Ç–æ –≤—ã–ø–∏—Ç—å‚ùì\n" \
                   "‚óªÔ∏è –ò–º–±–∏—Ä–Ω—ã–π —ç–ª—å - 250‚ÇΩ\n" \

            bot.send_photo(message.chat.id, photo, caption=text, reply_markup=markup, parse_mode='Markdown')
            bot.delete_message(message.chat.id, message.message_id)

        elif message.text == 'Hard\nüí∏üí∏':

            markup = types.InlineKeyboardMarkup(row_width=1)

            ya_maps = types.InlineKeyboardButton('–°—Å—ã–ª–∫–∞ –Ω–∞ –º–∞—Ä—à—Ä—É—Ç –≤ –Ø.–ö–∞—Ä—Ç–∞—Ö',
                                                url='https://clck.ru/34ZPgC',
                                                callback_data='qdsgwe')

            photo = open('photo_bot/wine.jpg', 'rb')

            markup.add(ya_maps)

            text = "1Ô∏è‚É£ *–ë–∞—Ä 13*\n" \
                   "ü™© –ù–æ—á–Ω–æ–π –∫–ª—É–±\n" \
                   "‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: 4,4\n\n" \
                   "–ß—Ç–æ –≤—ã–ø–∏—Ç—å‚ùì\n" \
                   "‚óªÔ∏è –ú–∞—Ä—Ç–∏–Ω–∏ —Ç–æ–Ω–∏–∫ - 400‚ÇΩ\n" \
                   "‚óªÔ∏è –≠–π–Ω—à—Ç–µ–π–Ω - 400‚ÇΩ\n" \
                   "‚óªÔ∏è –ú–∞–π —Ç–∞–π - 550‚ÇΩ\n" \
                   "‚óªÔ∏è –≠–ª—å –î–µ—Å—Ç–∏–ª–∞–¥–æ—Ä - 500‚ÇΩ\n\n" \
                   "2Ô∏è‚É£ *–®–∞–º–∞–π–∫–∞ House*\n" \
                   "üçΩÔ∏è –ü–∞–±-—Ä–µ—Å—Ç–æ—Ä–∞–Ω\n" \
                   "‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: 5,0\n\n" \
                   "–ß—Ç–æ –≤—ã–ø–∏—Ç—å‚ùì\n" \
                   "‚óªÔ∏è –®–∞–º–∞–π–∫–∞ —Å–≤–µ—Ç–ª–æ–µ - 149‚ÇΩ\n" \
                   "‚óªÔ∏è Jameson - 340‚ÇΩ" \

            bot.send_photo(message.chat.id, photo, caption=text, reply_markup=markup, parse_mode='Markdown')
            bot.delete_message(message.chat.id, message.message_id)

        elif message.text == 'Hard\nüí∏üí∏üí∏':

            markup = types.InlineKeyboardMarkup(row_width=1)

            ya_maps = types.InlineKeyboardButton('–°—Å—ã–ª–∫–∞ –Ω–∞ –º–∞—Ä—à—Ä—É—Ç –≤ –Ø.–ö–∞—Ä—Ç–∞—Ö',
                                                url='https://clck.ru/34ZPgW',
                                                callback_data='qdsgwe')

            photo = open('photo_bot/wine.jpg', 'rb')

            markup.add(ya_maps)

            text = "1Ô∏è‚É£ *–ì–æ–ª–æ–¥—Ä–∞–Ω–µ—Ü*\n" \
                   "üçΩÔ∏è –ü–∏–≤–Ω–æ–π –±–∞—Ä\n" \
                   "‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: 4,9\n\n" \
                   "–ß—Ç–æ –≤—ã–ø–∏—Ç—å‚ùì\n" \
                   "‚óªÔ∏è –ö–∞–º–Ω–µ–º –ø–æ –≥–æ–ª–æ–≤–µ - 250‚ÇΩ\n" \
                   "‚óªÔ∏è –ë—Ä–æ–¥–∏–ª–∫–∞ - 250‚ÇΩ\n\n" \
                   "2Ô∏è‚É£ *O.W. Grant*\n" \
                   "üçΩÔ∏è –ë–∞—Ä\n" \
                   "‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: 4,7\n\n" \
                   "–ß—Ç–æ –≤—ã–ø–∏—Ç—å‚ùì\n" \
                   "‚óªÔ∏è ABSOLUT - 250‚ÇΩ\n" \
                   "‚óªÔ∏è MICHTERS - 850‚ÇΩ\n" \
                   "‚óªÔ∏è SOTOR - 700‚ÇΩ\n" \
                   "‚óªÔ∏è EDEL WEISSER DALMATIAN DRY GIN - 550‚ÇΩ" \

            bot.send_photo(message.chat.id, photo, caption=text, reply_markup=markup, parse_mode='Markdown')
            bot.delete_message(message.chat.id, message.message_id)

        # –≤–µ—Ç–∫–∞ "–ü–ª–∞—Ç–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è"

        elif message.text == '–ü–ª–∞—Ç–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è üí∏':

            markup = types.InlineKeyboardMarkup(row_width=2)
            eat = types.InlineKeyboardButton("–ù–∞ 1 –º–µ—Å—è—Ü", callback_data='1_month')
            time = types.InlineKeyboardButton("–ù–∞ 6 –º–µ—Å—è—Ü–µ–≤", callback_data='6_month')
            pay = types.InlineKeyboardButton("–ù–∞ 12 –º–µ—Å—è—Ü–µ–≤", callback_data='12_month')

            markup.add(eat, time, pay)

            bot.send_message(message.chat.id, "üéâ –ü–æ-–Ω–∞—Å—Ç–æ—è—â–µ–º—É –∑–∞–ø–æ–º–∏–Ω–∞—é—â–∏–µ—Å—è –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è –æ—Ç –†–æ—Å—Ç–æ–≤–∞-–Ω–∞-–î–æ–Ω—É —Å T-Rostov!\n\n"
                                              "–í–∞—Å –∂–¥—É—Ç:\n"
                                              "üí∞–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ —Å–∫–∏–¥–∫–∏ –≤ –ª—É—á—à–∏—Ö –∑–∞–≤–µ–¥–µ–Ω–∏—è—Ö –≥–æ—Ä–æ–¥–∞\n"
                                              "üì∏ –ú–∞—Ä—à—Ä—É—Ç—ã –ø–æ —Å–∞–º—ã–º –∫—Ä–∞—Å–∏–≤—ã–º –∏ —Ñ–æ—Ç–æ–≥–µ–Ω–∏—á–Ω—ã–º –º–µ—Å—Ç–∞–º –≥–æ—Ä–æ–¥–∞\n"
                                              "üçπ –ù–µ–∑–∞–±—ã–≤–∞–µ–º—ã–µ –∞–ª–∫–æ—Ç—É—Ä—ã –ø–æ —è—Ä–∫–∏–º –±–∞—Ä–∞–º –≥–æ—Ä–æ–¥–∞\n\n"
                                              "–°—Ç–∞–Ω—å—Ç–µ –æ–¥–Ω–∏–º –∏–∑ –Ω–µ–º–Ω–æ–≥–∏—Ö –æ–±–ª–∞–¥–∞—Ç–µ–ª–µ–π –ø—Ä–∏–≤–∏–ª–µ–≥–∏–π, –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–æ–ª—å–∫–æ –Ω–∞—à–∏–º –ø—Ä–µ–º–∏—É–º-–ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º!üî•\n\n"
                                              "‚óªÔ∏è 1 –º–µ—Å. = 199‚ÇΩ\n‚óªÔ∏è 6 –º–µ—Å. = 1079‚ÇΩ\n‚óªÔ∏è 12 –º–µ—Å. = 1799‚ÇΩ\n\n"
                                              "–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –ø–æ–¥–ø–∏—Å–∫–∏:",
                             reply_markup=markup)

        # –≤–µ—Ç–∫–∞ "–ü–ª–∞—Ç–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏"

        elif message.text == '–ü–ª–∞—Ç–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è üíµ':

            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)

            instagramm = types.KeyboardButton("–ò–Ω—Å—Ç–∞–≥—Ä–∞–º–Ω—ã–µ –º–µ—Å—Ç–∞ üì∏")
            sales = types.KeyboardButton("–°–∫–∏–¥–∫–∏, –ø—Ä–æ–º–æ–∫–æ–¥—ã üàπ")
            route = types.KeyboardButton("–ú–∞—Ä—à—Ä—É—Ç –ø–æ –±–∞—Ä–∞–º üçπüö∂")
            back = types.KeyboardButton("–ù–∞–∑–∞–¥ ‚óÄÔ∏è")

            markup.add(instagramm, sales, route, back)

            bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—Ç–æ:', reply_markup=markup)

        elif message.text == '–°–∫–∏–¥–∫–∏, –ø—Ä–æ–º–æ–∫–æ–¥—ã üàπ':

            markup = types.InlineKeyboardMarkup(row_width=1)

            ya_maps = types.InlineKeyboardButton('–°—Å—ã–ª–∫–∞ –Ω–∞ –∑–∞–≤–µ–¥–µ–Ω–∏–µ',
                                                 url='https://clck.ru/34bkgS',
                                                 callback_data='qdsgwe')

            photo = open('photo_bot/moishe.png', 'rb')

            markup.add(ya_maps)

            text = "*–ú–æ–π—à–µ*\n\n" \
                   "üçΩÔ∏è –ë–∞—Ä\n" \
                   "üíµ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: 1100‚ÇΩ\n" \
                   "‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: 4,9\n\n" \
                   "üí¨ –£ —ç—Ç–æ–≥–æ –±–∞—Ä–∞ –µ—Å—Ç—å –¥—É—à–∞, –∏ –µ—ë –∑–æ–≤—É—Ç –ú–æ–π—à–µ. –ö–∞–∂–¥—ã–π –∫–æ–∫—Ç–µ–π–ª—å - —ç—Ç–æ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–∞—è –∏—Å—Ç–æ—Ä–∏—è, –∫–æ—Ç–æ—Ä–∞—è —Å–±–ª–∏–∑–∏—Ç –≤–∞—Å —Å –Ω–µ–π. –ó–¥–µ—Å—å –≤—ã —Å–º–æ–∂–µ—Ç–µ –Ω–∞—Å–ª–∞–¥–∏—Ç—å—Å—è –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–º–∏ –∫–æ–º–±–∏–Ω–∞—Ü–∏—è–º–∏ –≤–∫—É—Å–æ–≤, —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω—ã–º–∏ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞–º–∏ –∏ –ø—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω—ã–º–∏ —Å–æ—á–µ—Ç–∞–Ω–∏—è–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –æ—Å—Ç–∞–≤—è—Ç –≤–∞—Å —Ä–∞–≤–Ω–æ–¥—É—à–Ω—ã–º–∏!\n\n" \
                   "–°–¥–µ–ª–∞–π—Ç–µ –∑–∞–∫–∞–∑ –æ—Ç 1000‚ÇΩ –∏ –ø–æ–ª—É—á–∏—Ç–µ –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç –æ—Ç –∑–∞–≤–µ–¥–µ–Ω–∏—è!\n" \
                   "_–ü—Ä–æ–º–æ–∫–æ–¥_: `5286`" \

            bot.send_photo(message.chat.id, photo, caption=text, reply_markup=markup, parse_mode='Markdown')

        elif message.text == '–ò–Ω—Å—Ç–∞–≥—Ä–∞–º–Ω—ã–µ –º–µ—Å—Ç–∞ üì∏':

            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)

            place1 = types.KeyboardButton("–ú–∞—Ä—à—Ä—É—Ç 1Ô∏è‚É£")
            place2 = types.KeyboardButton("–ú–∞—Ä—à—Ä—É—Ç 2Ô∏è‚É£")
            back = types.KeyboardButton("–ù–∞–∑–∞–¥ ‚óÄÔ∏è")

            markup.add(place1, place2, back)

            bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ä—à—Ä—É—Ç:', reply_markup=markup)

        else:
            bot.send_message(message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é, —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å ü§∑‚Äç‚ôÇÔ∏è')

            sti = open('photo_bot/sticker1.webp', 'rb')
            bot.send_sticker(message.chat.id, sti)

# –ó–∞–≤–µ–¥–µ–Ω–∏—è —Ä—è–¥–æ–º

coordinats = [[47.216998, 39.722837], [47.295992, 39.714052], [47.223779, 39.725972], [47.217084, 39.715785],
              [47.229268, 39.754709], [47.218792, 39.7023912], [47.223639, 39.723592], [47.224893, 39.728308],
              [47.233986, 39.716414], [47.223681, 39.690192], [47.219967, 39.708302], [47.260473, 39.720735],
              [47.203997, 39.723735], [59.781546, 30.148099], [47.219703, 39.710773], [39.702452, 47.212757],
              [47.236886, 39.743202], [47.2332894, 39.735396], [47.222935, 39.695816], [47.287967, 39.712560],
              [47.22547, 39.73008], [47.220897, 39.714007], [47.225364, 39.739070]]

rest_name = ["–≠—Ä—Ç–∏", "–ì—É—Ä–∏—è", "Lilo", "–ù–µ –ì–æ—Ä—é–π", "–•–∏–Ω–∫–∞–ª–∏ Djan",
             "–ó–∞100–ª—å–µ", "–î—Ä—É–∂–±–∞", "–ï–¥–∞ –≤—Å–µ–≥–¥–∞", "–¢–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è –ï–¥—ã",
             "–ò–º–±–∏—Ä—å", "–í–∫—É—Å–Ω–æ –∏ –¢–æ—á–∫–∞", "–ë—É—Ä–≥–µ—Ä –ö–∏–Ω–≥", "KFC", "Subway",
             "–®—Ç–µ—Ñ–∞–Ω –ë—É—Ä–≥–µ—Ä", "–í–∫—É—Å–Ω–æ house", "–ß–µ—Ä–Ω–∞—è –∫–æ—à–∫–∞", "–•–ª–µ–± –∏ –°–∞–ª–æ",
             "–ñ–∏–≤–∞–≥–æ", "–ë—É–ª—å–≤–∞—Ä", "–ú–∞–≥–∞–¥–∞–Ω", "–†–∞–∫–∏ –∏ –ì–∞–¥—ã", "More Fish‚Äôka"]
Eda_blizko = {}

@bot.message_handler(content_types=['location'])
def check_location(message):
    user_locate = [message.location.latitude, message.location.longitude]
    for i in range(len(coordinats)):
        p = ((user_locate[0] - coordinats[i][0]) ** 2 + (user_locate[1] - coordinats[i][1]) ** 2) ** (1 / 2)
        Eda_blizko[p] = rest_name[i]
    bot.send_message(message.chat.id, f'üìç –ü–µ—Ä–≤–æ–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ: "{Eda_blizko[nsmallest(23, Eda_blizko)[0]]}"\n'
                                      f'üìç –í—Ç–æ—Ä–æ–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ: "{Eda_blizko[nsmallest(23, Eda_blizko)[1]]}"\n'
                                      f'üìç –¢—Ä–µ—Ç—å–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ: {Eda_blizko[nsmallest(23, Eda_blizko)[2]]}\n'
                                      f'üìç –ß–µ—Ç–≤–µ—Ä—Ç–æ–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ: "{Eda_blizko[nsmallest(23, Eda_blizko)[3]]}"\n'
                                      f'üìç –ü—è—Ç–æ–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ: "{Eda_blizko[nsmallest(23, Eda_blizko)[4]]}"')

def location (message):
    if message.location is not None:

        print(message.location)
        print(message)

    bot.send_message(message.chat.id, message.location)


# RUN
bot.polling(none_stop=True)